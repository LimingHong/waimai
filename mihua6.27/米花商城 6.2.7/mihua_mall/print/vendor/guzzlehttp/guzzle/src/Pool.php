<?php
 namespace GuzzleHttp; use GuzzleHttp\Promise\PromisorInterface; use Psr\Http\Message\RequestInterface; use GuzzleHttp\Promise\EachPromise; class Pool implements PromisorInterface { private $each; public function __construct(ClientInterface $client, $requests, array $config = array()) { goto glMIU; wze3J: $iterable = \GuzzleHttp\Promise\iter_for($requests); goto h_V79; UUL9G: $this->each = new EachPromise($requests(), $config); goto WeqjO; glMIU: if (isset($config["\x70\157\x6f\154\137\163\151\x7a\145"])) { goto oDOUl; } goto R_OOy; W92YG: goto VKXn2; goto FNnOm; Syrc4: oDOUl: goto LDxdo; H3kPn: goto X1Ceb; goto Syrc4; lFF9r: m0hvS: goto p6DEk; YIlYt: unset($config["\157\x70\164\x69\157\x6e\x73"]); goto k7rh5; xa2Ss: X1Ceb: goto x3RaG; S5t2F: $opts = []; goto W92YG; R_OOy: if (!isset($config["\x63\157\156\x63\x75\x72\162\x65\156\x63\171"])) { goto m0hvS; } goto H3kPn; x3RaG: if (isset($config["\157\x70\164\x69\x6f\156\163"])) { goto eu4EO; } goto S5t2F; lUzcL: $opts = $config["\x6f\160\x74\151\157\156\x73"]; goto YIlYt; k7rh5: VKXn2: goto wze3J; p6DEk: $config["\143\x6f\156\x63\x75\162\162\145\156\143\x79"] = 25; goto xa2Ss; h_V79: $requests = function () use($iterable, $client, $opts) { foreach ($iterable as $key => $rfn) { goto BERze; EMkXX: (yield $key => $rfn($opts)); goto wCSRd; fNnno: throw new \InvalidArgumentException("\105\x61\x63\150\40\x76\141\x6c\x75\x65\x20\171\x69\145\154\x64\145\x64\x20\142\171\x20" . "\164\x68\x65\x20\151\x74\x65\162\141\164\157\x72\40\x6d\x75\x73\164\x20\x62\x65\40\x61\x20\x50\163\162\x37\x5c\x48\164\x74\x70\x5c\115\145\163\x73\x61\x67\x65\134\122\145\161\x75\145\163\164\111\x6e\164\145\x72\x66\141\x63\x65\x20" . "\x6f\162\x20\141\x20\143\141\x6c\x6c\x61\142\x6c\145\40\x74\x68\141\x74\40\x72\145\164\165\x72\156\163\x20\x61\40\160\162\x6f\155\151\163\x65\x20\164\x68\x61\x74\x20\146\x75\x6c\x66\x69\x6c\x6c\163\40" . "\167\151\164\x68\40\141\x20\120\163\x72\67\x5c\x4d\145\x73\163\141\x67\145\134\110\164\x74\x70\x5c\122\x65\x73\x70\x6f\156\x73\x65\111\156\164\x65\x72\146\x61\143\x65\x20\157\142\x6a\x65\143\164\x2e"); goto drTaV; IywKL: (yield $key => $client->sendAsync($rfn, $opts)); goto fPVgT; bOVJg: BeGLs: goto chb0a; drTaV: goto uDrJT; goto VCyz8; BERze: if ($rfn instanceof RequestInterface) { goto CqpgI; } goto AgDKv; fPVgT: goto uDrJT; goto I9pFi; VCyz8: CqpgI: goto IywKL; I9pFi: ytXwr: goto EMkXX; AgDKv: if (is_callable($rfn)) { goto ytXwr; } goto fNnno; wCSRd: uDrJT: goto bOVJg; chb0a: } rGwQW: }; goto UUL9G; FNnOm: eu4EO: goto lUzcL; LDxdo: $config["\x63\157\156\143\165\162\162\145\x6e\x63\x79"] = $config["\160\157\x6f\154\x5f\163\x69\172\145"]; goto iNrcn; iNrcn: goto X1Ceb; goto lFF9r; WeqjO: } public function promise() { return $this->each->promise(); } public static function batch(ClientInterface $client, $requests, array $options = array()) { goto JBE9t; J54S7: $pool = new static($client, $requests, $options); goto XQjL3; I2R18: return $res; goto lfM6T; JBE9t: $res = []; goto RYhN_; wq9Lp: self::cmpCallback($options, "\x72\x65\x6a\145\x63\164\145\144", $res); goto J54S7; RADou: ksort($res); goto I2R18; RYhN_: self::cmpCallback($options, "\x66\165\x6c\146\x69\x6c\154\145\x64", $res); goto wq9Lp; XQjL3: $pool->promise()->wait(); goto RADou; lfM6T: } private static function cmpCallback(array &$options, $name, array &$results) { goto hNyv_; TU5iG: $options[$name] = function ($v, $k) use(&$results, $currentFn) { $currentFn($v, $k); $results[$k] = $v; }; goto ch3R0; hNyv_: if (!isset($options[$name])) { goto LKQ5Y; } goto Jrhzl; ch3R0: goto v2Kc7; goto YTwdc; RgNJb: $options[$name] = function ($v, $k) use(&$results) { $results[$k] = $v; }; goto oxDyz; YTwdc: LKQ5Y: goto RgNJb; oxDyz: v2Kc7: goto XRU5y; Jrhzl: $currentFn = $options[$name]; goto TU5iG; XRU5y: } }