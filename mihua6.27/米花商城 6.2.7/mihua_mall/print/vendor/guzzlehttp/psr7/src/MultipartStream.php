<?php
 namespace GuzzleHttp\Psr7; use Psr\Http\Message\StreamInterface; class MultipartStream implements StreamInterface { use StreamDecoratorTrait; private $boundary; public function __construct(array $elements = array(), $boundary = null) { $this->boundary = $boundary ?: sha1(uniqid('', true)); $this->stream = $this->createStream($elements); } public function getBoundary() { return $this->boundary; } public function isWritable() { return false; } private function getHeaders(array $headers) { goto qZ5sU; qZ5sU: $str = ''; goto P5Y6v; P5Y6v: foreach ($headers as $key => $value) { $str .= "{$key}\72\40{$value}\xd\12"; fVdip: } goto nPoVS; BTmwy: return "\x2d\55{$this->boundary}\xd\xa" . trim($str) . "\15\xa\15\12"; goto poG3Y; nPoVS: MbMQu: goto BTmwy; poG3Y: } protected function createStream(array $elements) { goto GA0vT; GA0vT: $stream = new AppendStream(); goto k6ltC; k6ltC: foreach ($elements as $element) { $this->addElement($stream, $element); QzsUx: } goto mTaXv; l3GZf: return $stream; goto S7yw6; mTaXv: j0QD3: goto zGxG9; zGxG9: $stream->addStream(stream_for("\x2d\55{$this->boundary}\55\x2d\15\12")); goto l3GZf; S7yw6: } private function addElement(AppendStream $stream, array $element) { goto jI8E5; nYF6C: list($body, $headers) = $this->createElement($element["\156\141\x6d\145"], $element["\x63\x6f\156\164\145\156\164\163"], isset($element["\146\151\154\x65\156\141\155\x65"]) ? $element["\146\151\x6c\x65\156\x61\155\145"] : null, isset($element["\150\x65\141\x64\145\x72\x73"]) ? $element["\x68\x65\141\144\145\x72\163"] : []); goto M1lvj; ENME0: $element["\x66\151\154\x65\156\x61\155\x65"] = $uri; goto BV9ZA; jI8E5: foreach (["\143\x6f\x6e\164\x65\156\x74\x73", "\156\x61\x6d\145"] as $key) { goto ysReZ; ysReZ: if (array_key_exists($key, $element)) { goto pumHX; } goto X6Ell; Tx9rO: pumHX: goto Pt1Lr; X6Ell: throw new \InvalidArgumentException("\x41\40\47{$key}\47\40\x6b\x65\171\x20\151\x73\x20\x72\x65\x71\165\151\x72\x65\x64"); goto Tx9rO; Pt1Lr: rCx22: goto a_jEC; a_jEC: } goto rs6Hc; MFIxI: if (!(substr($uri, 0, 6) !== "\x70\x68\x70\x3a\57\x2f")) { goto EC4jb; } goto ENME0; im1ns: $uri = $element["\143\x6f\156\x74\145\156\x74\x73"]->getMetadata("\165\162\151"); goto MFIxI; mlDb7: $element["\143\157\156\164\145\x6e\164\163"] = stream_for($element["\143\157\x6e\x74\x65\156\164\x73"]); goto eBJKu; M1lvj: $stream->addStream(stream_for($this->getHeaders($headers))); goto RhvCg; ZSiJX: BYQnE: goto nYF6C; rs6Hc: rRO8s: goto mlDb7; RhvCg: $stream->addStream($body); goto K2mEq; BV9ZA: EC4jb: goto ZSiJX; K2mEq: $stream->addStream(stream_for("\15\12")); goto lmbO1; eBJKu: if (!empty($element["\146\151\154\145\x6e\x61\155\x65"])) { goto BYQnE; } goto im1ns; lmbO1: } private function createElement($name, StreamInterface $stream, $filename, array $headers) { goto CMA9U; dtbgL: $length = $this->getHeader($headers, "\143\x6f\x6e\164\145\x6e\164\55\x6c\x65\x6e\x67\164\150"); goto V7LHG; Q2RAY: $type = $this->getHeader($headers, "\x63\x6f\156\164\x65\156\x74\55\x74\171\x70\x65"); goto oMo_N; K3xum: et4Ui: goto J_GUC; hkNeD: XyIbJ: goto Q2RAY; oMo_N: if (!(!$type && ($filename === "\60" || $filename))) { goto aFuRW; } goto G4ap3; H6o0_: if (!($length = $stream->getSize())) { goto hSgYI; } goto hXzRl; FbRZ2: HNgLp: goto dtbgL; G_ceV: return [$stream, $headers]; goto zO65n; G4ap3: if (!($type = mimetype_from_filename($filename))) { goto et4Ui; } goto XINyc; V7LHG: if ($length) { goto XyIbJ; } goto H6o0_; r_WFk: if ($disposition) { goto HNgLp; } goto LI1cn; p0vlO: hSgYI: goto hkNeD; hXzRl: $headers["\x43\x6f\x6e\x74\145\x6e\x74\55\x4c\145\156\147\x74\x68"] = (string) $length; goto p0vlO; XINyc: $headers["\x43\157\x6e\x74\x65\156\164\55\x54\171\160\145"] = $type; goto K3xum; LI1cn: $headers["\x43\x6f\156\x74\x65\156\164\x2d\104\151\163\x70\x6f\x73\151\164\151\157\156"] = $filename === "\60" || $filename ? sprintf("\x66\x6f\162\155\x2d\x64\x61\x74\141\x3b\40\x6e\x61\x6d\145\75\x22\45\x73\42\73\x20\146\x69\154\145\x6e\141\x6d\x65\75\x22\x25\163\x22", $name, basename($filename)) : "\x66\157\162\155\55\144\141\x74\x61\x3b\x20\156\141\x6d\145\x3d\42{$name}\42"; goto FbRZ2; CMA9U: $disposition = $this->getHeader($headers, "\143\x6f\x6e\164\x65\x6e\x74\55\x64\151\x73\x70\157\163\151\x74\151\157\x6e"); goto r_WFk; J_GUC: aFuRW: goto G_ceV; zO65n: } private function getHeader(array $headers, $key) { goto Sh2Wi; GbAio: aQiFl: goto z7qla; Sh2Wi: $lowercaseHeader = strtolower($key); goto CVoCg; z7qla: return null; goto dLd1v; CVoCg: foreach ($headers as $k => $v) { goto jHVQ3; sT89z: grYED: goto LVFXM; jHVQ3: if (!(strtolower($k) === $lowercaseHeader)) { goto ZEv4Q; } goto TQ4xp; u3leF: ZEv4Q: goto sT89z; TQ4xp: return $v; goto u3leF; LVFXM: } goto GbAio; dLd1v: } }