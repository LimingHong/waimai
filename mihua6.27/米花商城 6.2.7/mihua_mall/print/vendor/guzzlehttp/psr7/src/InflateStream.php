<?php
 namespace GuzzleHttp\Psr7; use Psr\Http\Message\StreamInterface; class InflateStream implements StreamInterface { use StreamDecoratorTrait; public function __construct(StreamInterface $stream) { goto o35fn; dU69b: stream_filter_append($resource, "\x7a\154\151\x62\56\151\x6e\x66\x6c\141\164\x65", STREAM_FILTER_READ); goto QQA4W; o35fn: $header = $stream->read(10); goto PnYjp; PnYjp: $filenameHeaderLength = $this->getLengthOfPossibleFilenameHeader($stream, $header); goto VhPf_; EJWXV: $resource = StreamWrapper::getResource($stream); goto dU69b; QQA4W: $this->stream = new Stream($resource); goto Mtoir; VhPf_: $stream = new LimitStream($stream, -1, 10 + $filenameHeaderLength); goto EJWXV; Mtoir: } private function getLengthOfPossibleFilenameHeader(StreamInterface $stream, $header) { goto YxbAn; w1_qy: $filename_header_length = 1; goto toa1O; W5_YK: return $filename_header_length; goto erD6r; izAwv: if (!(substr(bin2hex($header), 6, 2) === "\60\x38")) { goto kHlsn; } goto w1_qy; gaREG: kHlsn: goto W5_YK; XRke2: if (!($stream->read(1) !== chr(0))) { goto d30Qz; } goto AMAL8; toa1O: eVh5b: goto XRke2; qFV8s: d30Qz: goto gaREG; AMAL8: $filename_header_length++; goto zia3Z; YxbAn: $filename_header_length = 0; goto izAwv; zia3Z: goto eVh5b; goto qFV8s; erD6r: } }