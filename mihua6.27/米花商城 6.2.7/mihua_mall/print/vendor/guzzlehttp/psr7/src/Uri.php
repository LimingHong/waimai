<?php
 namespace GuzzleHttp\Psr7; use Psr\Http\Message\UriInterface; class Uri implements UriInterface { const HTTP_DEFAULT_HOST = "\154\157\x63\141\154\150\157\163\164"; private static $defaultPorts = array("\150\164\x74\x70" => 80, "\150\x74\x74\160\163" => 443, "\x66\x74\160" => 21, "\147\157\x70\150\145\162" => 70, "\156\x6e\x74\x70" => 119, "\156\145\x77\163" => 119, "\164\x65\x6c\156\145\x74" => 23, "\164\156\63\x32\67\x30" => 23, "\151\155\141\160" => 143, "\160\x6f\x70" => 110, "\x6c\x64\x61\x70" => 389); private static $charUnreserved = "\x61\x2d\x7a\101\55\x5a\60\55\x39\137\x5c\55\134\56\176"; private static $charSubDelims = "\x21\134\x24\x26\x27\x5c\50\134\x29\x5c\x2a\x5c\x2b\54\73\x3d"; private static $replaceQuery = array("\x3d" => "\x25\63\104", "\x26" => "\45\x32\66"); private $scheme = ''; private $userInfo = ''; private $host = ''; private $port; private $path = ''; private $query = ''; private $fragment = ''; public function __construct($uri = '') { goto NQbv6; NQbv6: if (!($uri != '')) { goto jyW6m; } goto W_glD; EJJiL: piIrN: goto er8OC; o8zto: throw new \InvalidArgumentException("\x55\x6e\141\142\154\145\x20\x74\x6f\x20\160\x61\x72\163\x65\40\x55\x52\111\72\x20{$uri}"); goto EJJiL; KFH_z: if (!($parts === false)) { goto piIrN; } goto o8zto; er8OC: $this->applyParts($parts); goto zitqP; zitqP: jyW6m: goto XO290; W_glD: $parts = parse_url($uri); goto KFH_z; XO290: } public function __toString() { return self::composeComponents($this->scheme, $this->getAuthority(), $this->path, $this->query, $this->fragment); } public static function composeComponents($scheme, $authority, $path, $query, $fragment) { goto f6JXU; MYUnF: $uri .= "\77" . $query; goto o3cIb; o5XuC: $uri .= $scheme . "\x3a"; goto qGVG0; Rgd4P: mUoqv: goto ogpMN; f6JXU: $uri = ''; goto XTtK_; X5mU7: if (!($authority != '' || $scheme === "\x66\x69\154\x65")) { goto b94PG; } goto TEub0; zrjPA: if (!($fragment != '')) { goto mUoqv; } goto odKws; XTtK_: if (!($scheme != '')) { goto UVlQz; } goto o5XuC; qGVG0: UVlQz: goto X5mU7; F3P9o: b94PG: goto lT4BP; ogpMN: return $uri; goto MweMx; lT4BP: $uri .= $path; goto y81BN; o3cIb: WXtSp: goto zrjPA; TEub0: $uri .= "\57\x2f" . $authority; goto F3P9o; odKws: $uri .= "\x23" . $fragment; goto Rgd4P; y81BN: if (!($query != '')) { goto WXtSp; } goto MYUnF; MweMx: } public static function isDefaultPort(UriInterface $uri) { return $uri->getPort() === null || isset(self::$defaultPorts[$uri->getScheme()]) && $uri->getPort() === self::$defaultPorts[$uri->getScheme()]; } public static function isAbsolute(UriInterface $uri) { return $uri->getScheme() !== ''; } public static function isNetworkPathReference(UriInterface $uri) { return $uri->getScheme() === '' && $uri->getAuthority() !== ''; } public static function isAbsolutePathReference(UriInterface $uri) { return $uri->getScheme() === '' && $uri->getAuthority() === '' && isset($uri->getPath()[0]) && $uri->getPath()[0] === "\x2f"; } public static function isRelativePathReference(UriInterface $uri) { return $uri->getScheme() === '' && $uri->getAuthority() === '' && (!isset($uri->getPath()[0]) || $uri->getPath()[0] !== "\57"); } public static function isSameDocumentReference(UriInterface $uri, UriInterface $base = null) { goto tW23f; pc1A0: return $uri->getScheme() === '' && $uri->getAuthority() === '' && $uri->getPath() === '' && $uri->getQuery() === ''; goto uwClE; tW23f: if (!($base !== null)) { goto mPlUA; } goto mtann; GqNz9: return $uri->getScheme() === $base->getScheme() && $uri->getAuthority() === $base->getAuthority() && $uri->getPath() === $base->getPath() && $uri->getQuery() === $base->getQuery(); goto xIsDf; xIsDf: mPlUA: goto pc1A0; mtann: $uri = UriResolver::resolve($base, $uri); goto GqNz9; uwClE: } public static function removeDotSegments($path) { return UriResolver::removeDotSegments($path); } public static function resolve(UriInterface $base, $rel) { goto rXwx7; yf39J: $rel = new self($rel); goto LDB8A; sqKwj: return UriResolver::resolve($base, $rel); goto hJ_wM; rXwx7: if ($rel instanceof UriInterface) { goto A3SIC; } goto yf39J; LDB8A: A3SIC: goto sqKwj; hJ_wM: } public static function withoutQueryValue(UriInterface $uri, $key) { goto Zw9Jh; wX9Iz: return $uri->withQuery(implode("\46", $result)); goto Ox_S9; w7EKn: if (!($current === '')) { goto ZLoG_; } goto BVmcw; BVmcw: return $uri; goto Vb0ec; Vb0ec: ZLoG_: goto Fv0zO; JJfGp: $result = array_filter(explode("\x26", $current), function ($part) use($decodedKey) { return rawurldecode(explode("\x3d", $part)[0]) !== $decodedKey; }); goto wX9Iz; Fv0zO: $decodedKey = rawurldecode($key); goto JJfGp; Zw9Jh: $current = $uri->getQuery(); goto w7EKn; Ox_S9: } public static function withQueryValue(UriInterface $uri, $key, $value) { goto S2RvT; i7uBb: $result = array_filter(explode("\46", $current), function ($part) use($decodedKey) { return rawurldecode(explode("\75", $part)[0]) !== $decodedKey; }); goto un9tw; Qi7JR: if ($current === '') { goto CYPE5; } goto j_tDG; xMMjm: $result[] = $key . "\x3d" . strtr($value, self::$replaceQuery); goto FV2Da; wI3p5: t9GfX: goto MeB3R; FV2Da: vMn0f: goto lVjkY; j_tDG: $decodedKey = rawurldecode($key); goto i7uBb; y0cU3: if ($value !== null) { goto dLiel; } goto jCzxH; un9tw: goto t9GfX; goto pioEP; pioEP: CYPE5: goto YMbWI; CPD6R: dLiel: goto xMMjm; S2RvT: $current = $uri->getQuery(); goto Qi7JR; aCcS5: goto vMn0f; goto CPD6R; MeB3R: $key = strtr($key, self::$replaceQuery); goto y0cU3; lVjkY: return $uri->withQuery(implode("\46", $result)); goto NSHRZ; YMbWI: $result = []; goto wI3p5; jCzxH: $result[] = $key; goto aCcS5; NSHRZ: } public static function fromParts(array $parts) { goto gg42p; ckxLI: return $uri; goto lNNr8; gg42p: $uri = new self(); goto dqVOl; iazEc: $uri->validateState(); goto ckxLI; dqVOl: $uri->applyParts($parts); goto iazEc; lNNr8: } public function getScheme() { return $this->scheme; } public function getAuthority() { goto WKuYB; sdzlw: Ds0ZG: goto qkXyP; KbIck: u6BA3: goto RBmW0; TkslI: if (!($this->userInfo !== '')) { goto u6BA3; } goto WE5aF; qkXyP: return $authority; goto LaY1q; WKuYB: $authority = $this->host; goto TkslI; RBmW0: if (!($this->port !== null)) { goto Ds0ZG; } goto ndn4S; ndn4S: $authority .= "\72" . $this->port; goto sdzlw; WE5aF: $authority = $this->userInfo . "\x40" . $authority; goto KbIck; LaY1q: } public function getUserInfo() { return $this->userInfo; } public function getHost() { return $this->host; } public function getPort() { return $this->port; } public function getPath() { return $this->path; } public function getQuery() { return $this->query; } public function getFragment() { return $this->fragment; } public function withScheme($scheme) { goto grg8b; gfsu2: $new->removeDefaultPort(); goto q9U9I; xMLXm: return $this; goto OiFGS; omDFB: if (!($this->scheme === $scheme)) { goto KZuhc; } goto xMLXm; jf_7c: return $new; goto y1pHb; IbUaD: $new->scheme = $scheme; goto gfsu2; grg8b: $scheme = $this->filterScheme($scheme); goto omDFB; OiFGS: KZuhc: goto FhTnv; FhTnv: $new = clone $this; goto IbUaD; q9U9I: $new->validateState(); goto jf_7c; y1pHb: } public function withUserInfo($user, $password = null) { goto poAaU; poAaU: $info = $user; goto S_Haz; sgu5G: if (!($this->userInfo === $info)) { goto g_S7g; } goto ZZMTz; S_Haz: if (!($password != '')) { goto ODFKL; } goto F8xpw; HR6W2: return $new; goto OiQy5; q5eol: ODFKL: goto sgu5G; vQqx8: g_S7g: goto RSWnJ; RSWnJ: $new = clone $this; goto HS9Yu; HS9Yu: $new->userInfo = $info; goto te4wM; te4wM: $new->validateState(); goto HR6W2; ZZMTz: return $this; goto vQqx8; F8xpw: $info .= "\72" . $password; goto q5eol; OiQy5: } public function withHost($host) { goto rVuzv; UFnM2: $new = clone $this; goto Xv_1O; giw7q: $new->validateState(); goto z6ETZ; z6ETZ: return $new; goto AKHm_; Izl6F: return $this; goto zP5_F; Xv_1O: $new->host = $host; goto giw7q; TRD0m: if (!($this->host === $host)) { goto bBpl8; } goto Izl6F; zP5_F: bBpl8: goto UFnM2; rVuzv: $host = $this->filterHost($host); goto TRD0m; AKHm_: } public function withPort($port) { goto sOuZ5; pEiz7: $new = clone $this; goto VpFYb; u8MEo: wTARY: goto pEiz7; sOuZ5: $port = $this->filterPort($port); goto wjWLf; L_7Fq: return $new; goto CeXkH; WF4nd: $new->validateState(); goto L_7Fq; VpFYb: $new->port = $port; goto G33WZ; DDjIH: return $this; goto u8MEo; G33WZ: $new->removeDefaultPort(); goto WF4nd; wjWLf: if (!($this->port === $port)) { goto wTARY; } goto DDjIH; CeXkH: } public function withPath($path) { goto FYqVl; p1wZZ: return $new; goto d0gDC; FCI7c: $new->validateState(); goto p1wZZ; rP1Ho: $new->path = $path; goto FCI7c; ayUel: $new = clone $this; goto rP1Ho; FH2NG: if (!($this->path === $path)) { goto nRAFh; } goto yoZPd; yoZPd: return $this; goto HJIB3; FYqVl: $path = $this->filterPath($path); goto FH2NG; HJIB3: nRAFh: goto ayUel; d0gDC: } public function withQuery($query) { goto OzXHY; UDB5c: if (!($this->query === $query)) { goto ZokN6; } goto e3vkc; uP92h: $new = clone $this; goto kmTX6; kmTX6: $new->query = $query; goto hs8S3; e3vkc: return $this; goto cRMLa; OzXHY: $query = $this->filterQueryAndFragment($query); goto UDB5c; cRMLa: ZokN6: goto uP92h; hs8S3: return $new; goto mzzXE; mzzXE: } public function withFragment($fragment) { goto eZ0co; LRlLX: return $this; goto y495Y; HAnKs: $new->fragment = $fragment; goto iPbgU; s2UXv: $new = clone $this; goto HAnKs; y495Y: t81jD: goto s2UXv; eZ0co: $fragment = $this->filterQueryAndFragment($fragment); goto vLwjx; iPbgU: return $new; goto DEqZF; vLwjx: if (!($this->fragment === $fragment)) { goto t81jD; } goto LRlLX; DEqZF: } private function applyParts(array $parts) { goto Z0fIf; annFn: if (!isset($parts["\x70\141\163\x73"])) { goto YgVJV; } goto oQOKo; W_Z9k: $this->host = isset($parts["\x68\x6f\163\x74"]) ? $this->filterHost($parts["\150\157\x73\x74"]) : ''; goto qeral; Hwnau: $this->path = isset($parts["\x70\141\164\150"]) ? $this->filterPath($parts["\x70\x61\164\150"]) : ''; goto xaMgF; qeral: $this->port = isset($parts["\160\x6f\x72\164"]) ? $this->filterPort($parts["\x70\157\x72\x74"]) : null; goto Hwnau; qQ56d: $this->userInfo = isset($parts["\x75\x73\x65\x72"]) ? $parts["\165\163\145\162"] : ''; goto W_Z9k; KRr6o: $this->removeDefaultPort(); goto vn1U0; Z0fIf: $this->scheme = isset($parts["\x73\x63\x68\x65\x6d\145"]) ? $this->filterScheme($parts["\163\x63\x68\145\x6d\145"]) : ''; goto qQ56d; oQOKo: $this->userInfo .= "\72" . $parts["\160\x61\x73\163"]; goto Acy4F; TCyRm: $this->fragment = isset($parts["\146\162\x61\147\x6d\x65\x6e\x74"]) ? $this->filterQueryAndFragment($parts["\x66\162\141\147\155\145\x6e\x74"]) : ''; goto annFn; xaMgF: $this->query = isset($parts["\161\x75\145\x72\x79"]) ? $this->filterQueryAndFragment($parts["\161\165\x65\x72\171"]) : ''; goto TCyRm; Acy4F: YgVJV: goto KRr6o; vn1U0: } private function filterScheme($scheme) { goto Lhv0N; YIqOi: iVZr2: goto EUiSr; aEKDG: throw new \InvalidArgumentException("\123\143\150\x65\x6d\145\x20\x6d\165\163\x74\40\x62\145\x20\x61\40\x73\164\x72\x69\x6e\147"); goto YIqOi; EUiSr: return strtolower($scheme); goto rvqI_; Lhv0N: if (is_string($scheme)) { goto iVZr2; } goto aEKDG; rvqI_: } private function filterHost($host) { goto rsjbF; L3A8X: throw new \InvalidArgumentException("\x48\x6f\163\164\x20\x6d\165\163\164\40\x62\145\x20\141\40\163\164\162\151\x6e\x67"); goto DpbN_; DpbN_: XzWaM: goto FkEf1; rsjbF: if (is_string($host)) { goto XzWaM; } goto L3A8X; FkEf1: return strtolower($host); goto fKyDQ; fKyDQ: } private function filterPort($port) { goto bho3F; bho3F: if (!($port === null)) { goto MhaE0; } goto PBPhb; UG9Cu: throw new \InvalidArgumentException(sprintf("\111\x6e\x76\141\x6c\x69\144\40\160\157\x72\x74\72\40\x25\x64\x2e\x20\115\165\x73\164\x20\x62\145\40\142\x65\164\x77\x65\x65\x6e\x20\x31\x20\141\156\x64\40\x36\65\65\x33\x35", $port)); goto zbblt; zbblt: sMxXJ: goto zRGp2; PBPhb: return null; goto MjZyG; MjZyG: MhaE0: goto k5th9; k5th9: $port = (int) $port; goto SU6md; SU6md: if (!(1 > $port || 0xffff < $port)) { goto sMxXJ; } goto UG9Cu; zRGp2: return $port; goto M1LuX; M1LuX: } private function removeDefaultPort() { goto FNVoi; FNVoi: if (!($this->port !== null && self::isDefaultPort($this))) { goto eA0kc; } goto kc6X4; kc6X4: $this->port = null; goto h0v4s; h0v4s: eA0kc: goto ls1ET; ls1ET: } private function filterPath($path) { goto pZnjv; pZnjv: if (is_string($path)) { goto bZQWo; } goto iuOWb; n6Gf9: return preg_replace_callback("\57\x28\x3f\72\x5b\x5e" . self::$charUnreserved . self::$charSubDelims . "\x25\x3a\100\134\57\135\53\x2b\x7c\45\50\77\41\133\x41\55\106\141\55\x66\60\x2d\71\135\173\x32\x7d\51\51\x2f", [$this, "\162\x61\x77\x75\162\x6c\145\156\143\157\144\x65\115\x61\x74\x63\150\x5a\145\x72\157"], $path); goto vFm3L; Xtiv3: bZQWo: goto n6Gf9; iuOWb: throw new \InvalidArgumentException("\x50\x61\164\x68\40\155\x75\x73\x74\40\x62\x65\40\141\40\163\164\x72\x69\156\x67"); goto Xtiv3; vFm3L: } private function filterQueryAndFragment($str) { goto YEteu; gH7mG: return preg_replace_callback("\x2f\x28\x3f\x3a\x5b\x5e" . self::$charUnreserved . self::$charSubDelims . "\x25\72\100\134\x2f\x5c\x3f\x5d\x2b\53\174\45\x28\x3f\41\x5b\101\55\x46\141\x2d\146\x30\55\x39\x5d\173\62\x7d\51\51\57", [$this, "\162\141\167\x75\162\x6c\x65\x6e\143\x6f\x64\145\115\x61\x74\143\x68\132\145\x72\157"], $str); goto BnTuu; f42Bo: pHMcn: goto gH7mG; YEteu: if (is_string($str)) { goto pHMcn; } goto RubjZ; RubjZ: throw new \InvalidArgumentException("\121\x75\145\162\x79\40\x61\x6e\x64\40\146\x72\x61\x67\155\145\x6e\x74\x20\155\x75\x73\164\x20\142\145\40\141\40\x73\x74\162\x69\156\147"); goto f42Bo; BnTuu: } private function rawurlencodeMatchZero(array $match) { return rawurlencode($match[0]); } private function validateState() { goto RZWsK; rDhSL: throw new \InvalidArgumentException("\101\40\x72\145\154\x61\164\x69\166\x65\x20\125\x52\x49\x20\x6d\165\163\164\40\x6e\157\164\x20\150\x61\166\x65\40\141\40\160\141\x74\x68\x20\142\x65\x67\x69\156\x6e\x69\x6e\x67\40\167\151\164\150\40\x61\40\163\145\x67\x6d\145\156\164\40\x63\x6f\156\164\x61\151\156\x69\156\x67\40\141\x20\143\x6f\154\157\156"); goto vQtZk; HRRq3: zSwzL: goto aUEhV; aUEhV: if ($this->getAuthority() === '') { goto ragaH; } goto NTDX0; vQtZk: gPlli: goto I0NyW; LHeYN: $this->path = "\57" . $this->path; goto gdRI2; NTDX0: if (isset($this->path[0]) && $this->path[0] !== "\x2f") { goto p2Fl1; } goto bkp4m; DyiCp: ragaH: goto xMF6b; KksVV: Cndfj: goto v2dv9; gdRI2: ULcnz: goto AnZPj; bkp4m: goto ULcnz; goto DyiCp; t3q4z: $this->host = self::HTTP_DEFAULT_HOST; goto HRRq3; rSWEb: @trigger_error("\x54\150\x65\x20\x70\x61\164\x68\x20\157\146\x20\x61\x20\x55\122\x49\40\x77\x69\164\x68\40\141\156\x20\141\x75\x74\150\x6f\162\151\x74\171\x20\x6d\x75\x73\x74\40\x73\x74\141\x72\164\x20\167\151\x74\x68\x20\141\x20\x73\x6c\141\163\x68\40\42\x2f\42\x20\x6f\x72\x20\x62\145\40\145\155\x70\x74\x79\x2e\40\101\165\x74\x6f\155\x61\147\x69\x63\x61\x6c\154\171\40\146\x69\170\151\156\147\x20\164\x68\145\x20\x55\x52\x49\40" . "\x62\x79\x20\141\144\x64\x69\156\147\x20\x61\x20\x6c\x65\141\x64\151\x6e\x67\x20\163\x6c\141\163\x68\x20\164\157\x20\164\x68\x65\x20\x70\141\x74\150\40\x69\x73\40\144\x65\x70\x72\145\x63\141\x74\x65\144\x20\x73\151\x6e\x63\145\x20\166\x65\162\x73\x69\157\156\x20\61\56\64\40\x61\x6e\144\40\167\x69\x6c\x6c\40\164\150\x72\x6f\x77\40\x61\x6e\40\145\x78\143\145\160\164\x69\157\156\40\x69\x6e\x73\164\x65\x61\144\56", E_USER_DEPRECATED); goto LHeYN; blVTT: p2Fl1: goto rSWEb; xMF6b: if (!(0 === strpos($this->path, "\x2f\57"))) { goto Cndfj; } goto UcPVM; v2dv9: if (!($this->scheme === '' && false !== strpos(explode("\x2f", $this->path, 2)[0], "\72"))) { goto gPlli; } goto rDhSL; I0NyW: goto ULcnz; goto blVTT; RZWsK: if (!($this->host === '' && ($this->scheme === "\x68\x74\x74\x70" || $this->scheme === "\x68\164\164\x70\163"))) { goto zSwzL; } goto t3q4z; UcPVM: throw new \InvalidArgumentException("\124\x68\145\40\x70\141\164\x68\x20\157\x66\x20\141\40\125\x52\x49\40\x77\x69\164\150\x6f\165\x74\40\x61\x6e\40\141\165\x74\x68\157\162\x69\164\x79\x20\155\165\163\164\40\156\x6f\x74\40\x73\x74\141\x72\164\x20\167\x69\164\x68\40\164\167\157\40\163\154\141\163\150\x65\x73\x20\42\x2f\x2f\42"); goto KksVV; AnZPj: } }