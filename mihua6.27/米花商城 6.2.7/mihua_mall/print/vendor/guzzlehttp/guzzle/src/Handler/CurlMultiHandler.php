<?php
 namespace GuzzleHttp\Handler; use GuzzleHttp\Promise as P; use GuzzleHttp\Promise\Promise; use GuzzleHttp\Psr7; use Psr\Http\Message\RequestInterface; class CurlMultiHandler { private $factory; private $selectTimeout; private $active; private $handles = array(); private $delays = array(); public function __construct(array $options = array()) { $this->factory = isset($options["\150\141\x6e\x64\154\x65\137\146\141\143\x74\157\162\171"]) ? $options["\150\141\x6e\x64\x6c\145\137\146\x61\x63\x74\157\x72\x79"] : new CurlFactory(50); $this->selectTimeout = isset($options["\163\145\154\x65\x63\164\x5f\x74\151\155\145\x6f\x75\164"]) ? $options["\x73\145\154\145\x63\x74\137\x74\x69\x6d\x65\x6f\x75\x74"] : 1; } public function __get($name) { goto w7ryV; uo6S6: YYwnr: goto gE2w4; zknIE: return $this->_mh = curl_multi_init(); goto uo6S6; w7ryV: if (!($name === "\x5f\x6d\x68")) { goto YYwnr; } goto zknIE; gE2w4: throw new \BadMethodCallException(); goto TZv4O; TZv4O: } public function __destruct() { goto k41px; JoiN8: unset($this->_mh); goto DWd4V; kozcz: curl_multi_close($this->_mh); goto JoiN8; k41px: if (!isset($this->_mh)) { goto TBD_1; } goto kozcz; DWd4V: TBD_1: goto jygI2; jygI2: } public function __invoke(RequestInterface $request, array $options) { goto XZS4S; ZVArf: $id = (int) $easy->handle; goto zjRjH; XZS4S: $easy = $this->factory->create($request, $options); goto ZVArf; z6l1Q: return $promise; goto GQ4Nm; zjRjH: $promise = new Promise([$this, "\x65\170\x65\143\x75\x74\145"], function () use($id) { return $this->cancel($id); }); goto QciAo; QciAo: $this->addRequest(["\x65\141\163\x79" => $easy, "\x64\145\146\145\162\162\x65\144" => $promise]); goto z6l1Q; GQ4Nm: } public function tick() { goto VWl_j; Dno6P: X_5it: goto cAKyu; gKEpF: foreach ($this->delays as $id => $delay) { goto scswm; Dp3Xb: unset($this->delays[$id]); goto DW9TW; scswm: if (!($currentTime >= $delay)) { goto NUl3O; } goto Dp3Xb; NsOWE: RhJXg: goto utQ2k; yzqyw: NUl3O: goto NsOWE; DW9TW: curl_multi_add_handle($this->_mh, $this->handles[$id]["\145\141\163\x79"]->handle); goto yzqyw; utQ2k: } goto a86vq; VWl_j: if (!$this->delays) { goto z3VrK; } goto F_Yzg; lD0W9: P\queue()->run(); goto bde00; a86vq: Lw3pm: goto VABip; hU1BY: usleep(250); goto eRg8Z; M0cv0: goto X_5it; goto cnVmy; cnVmy: KyzUN: goto D5CNg; cAKyu: if (!(curl_multi_exec($this->_mh, $this->active) === CURLM_CALL_MULTI_PERFORM)) { goto KyzUN; } goto M0cv0; D5CNg: $this->processMessages(); goto nK7iQ; F_Yzg: $currentTime = microtime(true); goto gKEpF; eRg8Z: LrE3M: goto Dno6P; VABip: z3VrK: goto lD0W9; bde00: if (!($this->active && curl_multi_select($this->_mh, $this->selectTimeout) === -1)) { goto LrE3M; } goto hU1BY; nK7iQ: } public function execute() { goto IUG8i; w2Wo6: $this->tick(); goto SPOi2; nyDI4: if (!(!$this->active && $this->delays)) { goto k_pS3; } goto hgTcK; IUG8i: $queue = P\queue(); goto Acea4; Acea4: Ysop9: goto kUkBt; SPOi2: goto Ysop9; goto PY1I1; PY1I1: vi238: goto OZD1F; kUkBt: if (!($this->handles || !$queue->isEmpty())) { goto vi238; } goto nyDI4; e10Iq: k_pS3: goto w2Wo6; hgTcK: usleep($this->timeToNext()); goto e10Iq; OZD1F: } private function addRequest(array $entry) { goto Syd5G; zfBph: SXnCK: goto Tc2Cf; oPCYL: $this->delays[$id] = microtime(true) + $easy->options["\144\x65\x6c\x61\171"] / 1000; goto Wkqle; yT5nj: $this->handles[$id] = $entry; goto huGu1; huGu1: if (empty($easy->options["\x64\x65\x6c\x61\171"])) { goto OIVqb; } goto oPCYL; K2YWa: $id = (int) $easy->handle; goto yT5nj; pMSmt: curl_multi_add_handle($this->_mh, $easy->handle); goto zfBph; V6TEn: OIVqb: goto pMSmt; Wkqle: goto SXnCK; goto V6TEn; Syd5G: $easy = $entry["\x65\x61\x73\171"]; goto K2YWa; Tc2Cf: } private function cancel($id) { goto LmQ_w; HawXX: $handle = $this->handles[$id]["\145\x61\163\x79"]->handle; goto UIYLx; RCdf3: return false; goto K04Cf; z6ILo: curl_multi_remove_handle($this->_mh, $handle); goto O9I0Y; K04Cf: jEOb3: goto HawXX; LmQ_w: if (isset($this->handles[$id])) { goto jEOb3; } goto RCdf3; ypNi9: return true; goto lR9RL; UIYLx: unset($this->delays[$id], $this->handles[$id]); goto z6ILo; O9I0Y: curl_close($handle); goto ypNi9; lR9RL: } private function processMessages() { goto p4PyE; p4PyE: k5ihK: goto S69uy; gKsPC: $entry["\145\x61\x73\171"]->errno = $done["\162\x65\x73\x75\x6c\164"]; goto ECgbJ; F5Vis: if (isset($this->handles[$id])) { goto lpnBN; } goto yJlu1; zg85b: $entry = $this->handles[$id]; goto M35oK; S69uy: if (!($done = curl_multi_info_read($this->_mh))) { goto ugeaL; } goto P2MNh; saegO: lpnBN: goto zg85b; yJlu1: goto k5ihK; goto saegO; M35oK: unset($this->handles[$id], $this->delays[$id]); goto gKsPC; ECgbJ: $entry["\x64\145\x66\x65\x72\x72\x65\144"]->resolve(CurlFactory::finish($this, $entry["\145\x61\163\x79"], $this->factory)); goto h4gBJ; h4gBJ: goto k5ihK; goto YACrF; YACrF: ugeaL: goto SCdtb; P2MNh: $id = (int) $done["\150\141\x6e\144\x6c\145"]; goto zP1xk; zP1xk: curl_multi_remove_handle($this->_mh, $done["\x68\141\x6e\144\x6c\x65"]); goto F5Vis; SCdtb: } private function timeToNext() { goto urkxP; zVDH3: return max(0, $nextTime - $currentTime) * 1000000; goto DG6XZ; urkxP: $currentTime = microtime(true); goto BRCyx; nbwQG: foreach ($this->delays as $time) { goto twthV; XMMzH: $nextTime = $time; goto RCNIG; RCNIG: CXMUA: goto p4s44; p4s44: xHWaX: goto QtbMS; twthV: if (!($time < $nextTime)) { goto CXMUA; } goto XMMzH; QtbMS: } goto uooTO; BRCyx: $nextTime = PHP_INT_MAX; goto nbwQG; uooTO: Cf1r7: goto zVDH3; DG6XZ: } }