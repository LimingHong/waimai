<?php
 namespace GuzzleHttp\Promise; class TaskQueue implements TaskQueueInterface { private $enableShutdown = true; private $queue = array(); public function __construct($withShutdown = true) { goto SbAcN; KNymt: register_shutdown_function(function () { if (!$this->enableShutdown) { goto qOSqm; } $err = error_get_last(); if (!(!$err || $err["\164\x79\x70\145"] ^ E_ERROR)) { goto Gnu0d; } $this->run(); Gnu0d: qOSqm: }); goto w_wjo; w_wjo: knC6e: goto hWb1z; SbAcN: if (!$withShutdown) { goto knC6e; } goto KNymt; hWb1z: } public function isEmpty() { return !$this->queue; } public function add(callable $task) { $this->queue[] = $task; } public function run() { goto XNvvN; jtGyu: DRpHB: goto H4qX0; AmvXY: if (!($task = array_shift($this->queue))) { goto DRpHB; } goto UGEGP; UGEGP: $task(); goto xmV7O; xmV7O: goto x7DMt; goto jtGyu; XNvvN: x7DMt: goto AmvXY; H4qX0: } public function disableShutdown() { $this->enableShutdown = false; } }