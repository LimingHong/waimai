<?php
 namespace GuzzleHttp\Handler; use GuzzleHttp\Exception\RequestException; use GuzzleHttp\Exception\ConnectException; use GuzzleHttp\Promise\FulfilledPromise; use GuzzleHttp\Promise\RejectedPromise; use GuzzleHttp\Psr7; use GuzzleHttp\Psr7\LazyOpenStream; use GuzzleHttp\TransferStats; use Psr\Http\Message\RequestInterface; class CurlFactory implements CurlFactoryInterface { private $handles = array(); private $maxHandles; public function __construct($maxHandles) { $this->maxHandles = $maxHandles; } public function create(RequestInterface $request, array $options) { goto C78sn; R6t4k: qty_R: goto pp_XS; pp_XS: $conf[CURLOPT_HEADERFUNCTION] = $this->createHeaderFn($easy); goto dI_Nm; yG2Lt: $conf = $this->getDefaultConf($easy); goto c71gw; ne_c_: unset($conf["\x5f\x68\145\x61\x64\145\162\163"]); goto fV7zQ; UamIW: $easy->request = $request; goto XO5Rg; fV7zQ: if (!isset($options["\x63\165\162\154"])) { goto qty_R; } goto D8bkN; XO5Rg: $easy->options = $options; goto yG2Lt; t62ib: return $easy; goto m8Cst; D8bkN: $conf = array_replace($conf, $options["\143\165\x72\154"]); goto R6t4k; b1ZIS: $this->applyHandlerOptions($easy, $conf); goto HzY6p; HzY6p: $this->applyHeaders($easy, $conf); goto ne_c_; c71gw: $this->applyMethod($easy, $conf); goto b1ZIS; THOFN: keTQC: goto PXOV8; PXOV8: $easy = new EasyHandle(); goto UamIW; dI_Nm: $easy->handle = $this->handles ? array_pop($this->handles) : curl_init(); goto PMtbv; RhbSX: unset($options["\143\x75\x72\x6c"]["\142\x6f\144\x79\137\141\x73\x5f\x73\x74\x72\151\156\x67"]); goto THOFN; C78sn: if (!isset($options["\143\x75\x72\154"]["\x62\157\x64\x79\137\141\163\x5f\x73\164\x72\151\156\147"])) { goto keTQC; } goto oLNJr; oLNJr: $options["\x5f\142\x6f\144\x79\137\x61\x73\x5f\163\164\x72\x69\156\147"] = $options["\143\x75\x72\x6c"]["\142\157\x64\171\x5f\x61\163\x5f\x73\164\x72\x69\156\x67"]; goto RhbSX; PMtbv: curl_setopt_array($easy->handle, $conf); goto t62ib; m8Cst: } public function release(EasyHandle $easy) { goto yF95L; kaG2I: curl_setopt($resource, CURLOPT_PROGRESSFUNCTION, null); goto GX1Rq; UzId3: goto l7Cju; goto rpLk1; rpLk1: Ek8vj: goto Mh5i9; LmYUa: $this->handles[] = $resource; goto UzId3; Vz0oB: curl_setopt($resource, CURLOPT_WRITEFUNCTION, null); goto kaG2I; KBbyT: curl_setopt($resource, CURLOPT_READFUNCTION, null); goto Vz0oB; eJwtA: curl_setopt($resource, CURLOPT_HEADERFUNCTION, null); goto KBbyT; GWhgS: if (count($this->handles) >= $this->maxHandles) { goto Ek8vj; } goto eJwtA; F83kw: curl_setopt($resource, CURLOPT_POST, false); goto LmYUa; yF95L: $resource = $easy->handle; goto MAg8W; MAg8W: unset($easy->handle); goto GWhgS; Mh5i9: curl_close($resource); goto NQGKd; GX1Rq: curl_setopt($resource, CURLOPT_HTTPGET, 1); goto F83kw; NQGKd: l7Cju: goto VGyaI; VGyaI: } public static function finish(callable $handler, EasyHandle $easy, CurlFactoryInterface $factory) { goto gcR_x; ZHdc5: ysj09: goto YbS_t; YbS_t: $factory->release($easy); goto MhR0o; ec13p: return self::finishError($handler, $easy, $factory); goto ZHdc5; nfl9b: self::invokeStats($easy); goto w5747; WaZZ2: if (!(!$easy->response || $easy->errno)) { goto ysj09; } goto ec13p; rhRNs: if (!$body->isSeekable()) { goto EplzL; } goto PrAU0; PrAU0: $body->rewind(); goto DQUuM; MhR0o: $body = $easy->response->getBody(); goto rhRNs; yLORz: return new FulfilledPromise($easy->response); goto d2IaU; gcR_x: if (!isset($easy->options["\157\156\137\x73\164\x61\x74\163"])) { goto Nm_SY; } goto nfl9b; w5747: Nm_SY: goto WaZZ2; DQUuM: EplzL: goto yLORz; d2IaU: } private static function invokeStats(EasyHandle $easy) { goto SwyYZ; VLF7Z: $stats = new TransferStats($easy->request, $easy->response, $curlStats["\164\x6f\x74\x61\154\x5f\x74\151\x6d\145"], $easy->errno, $curlStats); goto aEHDN; SwyYZ: $curlStats = curl_getinfo($easy->handle); goto VLF7Z; aEHDN: call_user_func($easy->options["\x6f\x6e\137\x73\164\x61\164\x73"], $stats); goto csSl3; csSl3: } private static function finishError(callable $handler, EasyHandle $easy, CurlFactoryInterface $factory) { goto LQwC0; RLLvp: return self::retryFailedRewind($handler, $easy, $ctx); goto k1uQw; k1uQw: mAt7O: goto WxXqn; WxXqn: return self::createRejection($easy, $ctx); goto y2EZ5; hxRpb: if (!(empty($easy->options["\137\145\162\x72\137\x6d\145\x73\163\141\147\x65"]) && (!$easy->errno || $easy->errno == 65))) { goto mAt7O; } goto RLLvp; B4gv6: $factory->release($easy); goto hxRpb; LQwC0: $ctx = ["\x65\x72\x72\x6e\157" => $easy->errno, "\145\x72\162\x6f\162" => curl_error($easy->handle)] + curl_getinfo($easy->handle); goto B4gv6; y2EZ5: } private static function createRejection(EasyHandle $easy, array $ctx) { goto ZrxWm; UwyIg: $message = sprintf("\143\125\x52\114\x20\145\162\162\x6f\x72\40\45\x73\72\x20\x25\163\x20\50\45\x73\x29", $ctx["\145\162\162\156\x6f"], $ctx["\145\x72\162\x6f\162"], "\x73\x65\145\x20\x68\164\164\160\x3a\x2f\57\x63\165\162\154\56\150\141\170\170\x2e\163\145\x2f\154\x69\142\x63\x75\x72\154\57\143\x2f\x6c\x69\x62\x63\165\x72\154\55\145\162\162\x6f\x72\163\56\x68\x74\x6d\154"); goto ixbmD; XXcAY: RdVfe: goto UwyIg; ixbmD: $error = isset($connectionErrors[$easy->errno]) ? new ConnectException($message, $easy->request, null, $ctx) : new RequestException($message, $easy->request, $easy->response, null, $ctx); goto Lt1cM; ZrxWm: static $connectionErrors = array(CURLE_OPERATION_TIMEOUTED => true, CURLE_COULDNT_RESOLVE_HOST => true, CURLE_COULDNT_CONNECT => true, CURLE_SSL_CONNECT_ERROR => true, CURLE_GOT_NOTHING => true); goto bEDIv; hWETb: return \GuzzleHttp\Promise\rejection_for(new RequestException("\101\x6e\40\145\162\162\x6f\162\x20\x77\x61\x73\x20\x65\156\x63\x6f\165\x6e\164\x65\162\145\x64\40\144\165\162\151\156\147\40\164\150\145\x20\x6f\156\137\x68\x65\x61\144\145\162\x73\x20\x65\x76\x65\x6e\164", $easy->request, $easy->response, $easy->onHeadersException, $ctx)); goto XXcAY; bEDIv: if (!$easy->onHeadersException) { goto RdVfe; } goto hWETb; Lt1cM: return \GuzzleHttp\Promise\rejection_for($error); goto OqXdk; OqXdk: } private function getDefaultConf(EasyHandle $easy) { goto yNnmt; aO0FG: BENhL: goto ZUOJy; ZUOJy: $version = $easy->request->getProtocolVersion(); goto gKIF0; QQiYB: $conf[CURLOPT_PROTOCOLS] = CURLPROTO_HTTP | CURLPROTO_HTTPS; goto aO0FG; hhilB: goto F_8GL; goto SRfrN; SRfrN: bKyJG: goto aI_eL; LE0Jr: F_8GL: goto lATzb; Gwu1d: $conf[CURLOPT_HTTP_VERSION] = CURL_HTTP_VERSION_1_0; goto hhilB; lATzb: return $conf; goto hO01B; yNnmt: $conf = ["\137\x68\x65\x61\144\145\x72\163" => $easy->request->getHeaders(), CURLOPT_CUSTOMREQUEST => $easy->request->getMethod(), CURLOPT_URL => (string) $easy->request->getUri()->withFragment(''), CURLOPT_RETURNTRANSFER => false, CURLOPT_HEADER => false, CURLOPT_CONNECTTIMEOUT => 150]; goto ynXHr; aI_eL: $conf[CURLOPT_HTTP_VERSION] = CURL_HTTP_VERSION_1_1; goto sZ63E; FvWiF: if ($version == 2.0) { goto kkDH8; } goto Gwu1d; ynXHr: if (!defined("\x43\125\x52\x4c\117\x50\x54\x5f\x50\x52\117\124\117\103\117\x4c\123")) { goto BENhL; } goto QQiYB; gKIF0: if ($version == 1.1) { goto bKyJG; } goto FvWiF; sZ63E: goto F_8GL; goto UdA5i; UdA5i: kkDH8: goto CGNP0; CGNP0: $conf[CURLOPT_HTTP_VERSION] = CURL_HTTP_VERSION_2_0; goto LE0Jr; hO01B: } private function applyMethod(EasyHandle $easy, array &$conf) { goto jtug7; K5kpy: if ($method === "\x50\125\x54" || $method === "\120\x4f\123\x54") { goto dMfAj; } goto e5y3X; pYtVD: return; goto TdtTI; Tpxzg: if ($easy->request->hasHeader("\x43\157\x6e\x74\x65\156\x74\x2d\x4c\145\x6e\x67\164\150")) { goto Pnr_j; } goto dBALh; Wpn2j: if (!($size === null || $size > 0)) { goto rUHu7; } goto h0k4K; xUtXO: $conf[CURLOPT_NOBODY] = true; goto M7dIq; vCVGk: cMnK2: goto xUtXO; ModjW: $method = $easy->request->getMethod(); goto K5kpy; h0k4K: $this->applyBody($easy->request, $easy->options, $conf); goto pYtVD; TdtTI: rUHu7: goto ModjW; dBALh: $conf[CURLOPT_HTTPHEADER][] = "\x43\157\x6e\164\x65\x6e\164\x2d\x4c\x65\156\147\164\150\x3a\40\x30"; goto o5_4W; o5_4W: Pnr_j: goto AkFGw; f39pL: dMfAj: goto Tpxzg; SqKcO: xYXbV: goto WsXqs; AkFGw: goto xYXbV; goto vCVGk; jtug7: $body = $easy->request->getBody(); goto X9c0t; e5y3X: if ($method === "\110\x45\101\x44") { goto cMnK2; } goto M7VQY; M7VQY: goto xYXbV; goto f39pL; M7dIq: unset($conf[CURLOPT_WRITEFUNCTION], $conf[CURLOPT_READFUNCTION], $conf[CURLOPT_FILE], $conf[CURLOPT_INFILE]); goto SqKcO; X9c0t: $size = $body->getSize(); goto Wpn2j; WsXqs: } private function applyBody(RequestInterface $request, array $options, array &$conf) { goto radn_; WwWEk: if (!($size !== null)) { goto vH7Mg; } goto Vx2LK; aKtRH: $conf[CURLOPT_UPLOAD] = true; goto WwWEk; h9OeX: $body->rewind(); goto dT2PA; iNAJN: $this->removeHeader("\x43\157\x6e\164\145\x6e\164\55\114\145\156\147\x74\150", $conf); goto fMSL0; HhNwG: $this->removeHeader("\103\157\156\x74\145\156\x74\55\114\145\x6e\147\164\150", $conf); goto nJSL6; eKeX3: goto qCCxo; goto uQGEG; radn_: $size = $request->hasHeader("\x43\157\x6e\x74\x65\156\x74\x2d\x4c\x65\156\x67\164\150") ? (int) $request->getHeaderLine("\x43\x6f\156\x74\145\156\164\55\114\x65\156\x67\x74\x68") : null; goto zgYO7; bVXQt: $conf[CURLOPT_READFUNCTION] = function ($ch, $fd, $length) use($body) { return $body->read($length); }; goto eKeX3; uQGEG: ivfwI: goto Ut3Fp; nJSL6: $this->removeHeader("\x54\162\x61\x6e\x73\146\x65\162\x2d\105\156\x63\157\x64\151\x6e\x67", $conf); goto u5SpA; u5SpA: qCCxo: goto y4bX2; zgYO7: if ($size !== null && $size < 1000000 || !empty($options["\x5f\x62\157\x64\171\x5f\141\x73\x5f\x73\164\x72\x69\156\x67"])) { goto ivfwI; } goto aKtRH; Vx2LK: $conf[CURLOPT_INFILESIZE] = $size; goto iNAJN; Rvbtn: dCnBZ: goto MOh2c; rcrGH: jt2GS: goto CrPoi; LiD0V: $conf[CURLOPT_HTTPHEADER][] = "\x43\x6f\x6e\x74\145\x6e\x74\55\x54\x79\x70\x65\x3a"; goto Rvbtn; dT2PA: eIYk4: goto bVXQt; fMSL0: vH7Mg: goto FCoKC; y4bX2: if ($request->hasHeader("\x45\x78\x70\x65\143\164")) { goto jt2GS; } goto Wda6j; FCoKC: $body = $request->getBody(); goto tIaWx; CrPoi: if ($request->hasHeader("\x43\157\x6e\164\145\156\164\55\x54\x79\x70\145")) { goto dCnBZ; } goto LiD0V; Wda6j: $conf[CURLOPT_HTTPHEADER][] = "\105\170\x70\x65\143\164\x3a"; goto rcrGH; tIaWx: if (!$body->isSeekable()) { goto eIYk4; } goto h9OeX; Ut3Fp: $conf[CURLOPT_POSTFIELDS] = (string) $request->getBody(); goto HhNwG; MOh2c: } private function applyHeaders(EasyHandle $easy, array &$conf) { goto FLrRZ; KzLIl: HwB46: goto TSGKM; cWtwU: mg69V: goto aE1Gw; TSGKM: if ($easy->request->hasHeader("\101\x63\x63\145\160\164")) { goto mg69V; } goto mKeKv; FLrRZ: foreach ($conf["\137\x68\x65\141\144\x65\162\x73"] as $name => $values) { goto Sax_d; Sax_d: foreach ($values as $value) { $conf[CURLOPT_HTTPHEADER][] = "{$name}\x3a\x20{$value}"; Z2t0l: } goto DRweq; DRweq: prIaH: goto GCVrD; GCVrD: ixv3n: goto wuCbi; wuCbi: } goto KzLIl; mKeKv: $conf[CURLOPT_HTTPHEADER][] = "\x41\143\x63\x65\160\x74\72"; goto cWtwU; aE1Gw: } private function removeHeader($name, array &$options) { foreach (array_keys($options["\x5f\150\145\141\x64\x65\162\163"]) as $key) { goto N6Via; iYsgS: return; goto Q4veM; N6Via: if (strcasecmp($key, $name)) { goto MfTTr; } goto TKuXn; TKuXn: unset($options["\137\150\145\x61\144\x65\162\x73"][$key]); goto iYsgS; et5Fk: oSA1E: goto EMVSi; Q4veM: MfTTr: goto et5Fk; EMVSi: } j70NG: } private function applyHandlerOptions(EasyHandle $easy, array &$conf) { goto K3_Hz; HpdDF: ST5wq: goto SNpoj; iTRFh: GTFIK: goto Zwrb6; aPWSU: XGjXf: goto I5PoC; mr2OU: if ($options["\x76\145\162\x69\146\171"] === false) { goto RXkEy; } goto Q9v82; C1r2n: $sslKey = $sslKey[0]; goto CKAar; Iwzbr: if (!is_array($sslKey)) { goto RfBES; } goto zGti6; WGhQo: $cert = $cert[0]; goto S1blD; XdXUa: BEC2H: goto hUrOd; cBfc4: Pd27k: goto Uh9aT; L3HNj: QBc16: goto sflFW; YHHPG: $conf[CURLOPT_HTTPHEADER][] = "\x41\143\x63\145\x70\x74\x2d\105\156\x63\157\144\x69\156\x67\x3a"; goto B0BOw; UEI8i: Fm5S0: goto d_qF8; MvKx9: S_Nte: goto XdXUa; u2iws: $conf[CURLOPT_ENCODING] = $accept; goto o63BF; C_P1a: if (is_callable($progress)) { goto QBc16; } goto pE3Oh; J74BG: $conf[CURLOPT_CONNECTTIMEOUT_MS] = $options["\143\x6f\x6e\156\x65\143\164\x5f\x74\151\155\x65\157\x75\164"] * 1000; goto wWcUj; Zwrb6: $timeoutRequiresNoSignal = false; goto KQ_3e; x7Wdn: i1Hpn: goto i1oDX; OB6bc: $easy->sink = Psr7\stream_for($conf[CURLOPT_FILE]); goto xgxyV; IOUld: $conf[CURLOPT_SSLCERTPASSWD] = $cert[1]; goto WGhQo; UQ2yR: if (empty($options["\x64\145\x63\157\x64\x65\137\x63\x6f\156\x74\x65\x6e\x74"])) { goto C6YhO; } goto jyNRR; r5Aav: $conf[CURLOPT_SSLKEY] = $sslKey; goto HHAZW; CKAar: RfBES: goto XSZY1; c9Ynf: $conf[CURLOPT_IPRESOLVE] = CURL_IPRESOLVE_V4; goto iXhpf; aCdsI: tPCW8: goto LIKaK; bRoiv: PMNEs: goto u2iws; Olb3m: $sslKey = $options["\x73\163\154\137\153\145\171"]; goto Iwzbr; s6oZX: KMQoA: goto cBfc4; l2mC3: if (!($timeoutRequiresNoSignal && strtoupper(substr(PHP_OS, 0, 3)) !== "\127\111\x4e")) { goto ST5wq; } goto QS0c3; Yewdu: goto S_Nte; goto aPWSU; QS0c3: $conf[CURLOPT_NOSIGNAL] = true; goto HpdDF; cv7hF: throw new \InvalidArgumentException("\x53\123\x4c\x20\x63\x65\x72\164\151\x66\151\x63\141\164\145\x20\156\157\164\40\146\157\165\156\x64\72\40{$cert}"); goto e4pQN; aVll1: if (!isset($options["\166\145\162\x69\146\171"])) { goto hEZXM; } goto mr2OU; xgxyV: goto GTFIK; goto sn5ur; SJnSc: if (!is_array($options["\x70\162\157\x78\x79"])) { goto vJ4KS; } goto SiWdL; zGti6: $conf[CURLOPT_SSLKEYPASSWD] = $sslKey[1]; goto C1r2n; eIWPe: if ($accept) { goto PMNEs; } goto SxWfB; wTBNY: $cert = $options["\x63\145\162\164"]; goto EtEZT; SiWdL: $scheme = $easy->request->getUri()->getScheme(); goto oB60l; Uh9aT: if (!isset($options["\143\x65\162\x74"])) { goto tPCW8; } goto wTBNY; QzePY: if (is_dir($options["\x76\x65\x72\151\x66\x79"]) || is_link($options["\166\x65\162\x69\146\171"]) && is_dir(readlink($options["\x76\145\162\151\146\x79"]))) { goto XGjXf; } goto L7pKH; o63BF: aJxHK: goto NIEx4; ed7C9: $host = $easy->request->getUri()->getHost(); goto h0UDx; zsj2t: throw new \InvalidArgumentException("\123\x53\114\x20\160\x72\151\166\x61\x74\x65\x20\x6b\x65\x79\x20\156\x6f\164\x20\146\x6f\165\x6e\144\72\x20{$sslKey}"); goto C6q4w; IniVT: $conf[CURLOPT_SSL_VERIFYPEER] = true; goto ZbZqg; Ezwp3: if (!isset($options["\x63\157\156\156\x65\143\164\x5f\x74\x69\x6d\145\x6f\165\164"])) { goto FYBa1; } goto uj250; QE0Um: if (!is_dir(dirname($sink))) { goto C_0Ut; } goto pKh3o; SFcBM: $easy->sink = $sink; goto DgXlK; wWcUj: FYBa1: goto l2mC3; Lq0ga: $conf[CURLOPT_PROXY] = $options["\160\x72\157\x78\x79"]; goto s6oZX; B0BOw: goto aJxHK; goto bRoiv; K3_Hz: $options = $easy->options; goto aVll1; rpC8f: $conf[CURLOPT_PROXY] = $options["\160\x72\157\170\171"][$scheme]; goto cR66V; ZbZqg: if (!is_string($options["\166\x65\162\x69\146\171"])) { goto BEC2H; } goto Tv7gh; sn5ur: xhYNs: goto A2iwc; xGhB1: $progress = $options["\x70\162\x6f\147\x72\x65\x73\x73"]; goto C_P1a; fH1Gr: $sink = \GuzzleHttp\Psr7\stream_for($sink); goto iMGsu; SNpoj: if (!isset($options["\160\x72\157\x78\x79"])) { goto Pd27k; } goto SJnSc; uA8Hp: $conf[CURLOPT_STDERR] = \GuzzleHttp\debug_resource($options["\x64\145\142\x75\147"]); goto j1vBm; ea3Pk: jaM82: goto FL1TF; xIvAs: $conf[CURLOPT_SSL_VERIFYHOST] = 0; goto nq1eH; SxWfB: $conf[CURLOPT_ENCODING] = ''; goto YHHPG; A4G32: if (!isset($options["\146\x6f\x72\x63\x65\137\x69\160\x5f\162\x65\163\157\154\x76\145"])) { goto VT0gR; } goto dbFii; Rq48B: VT0gR: goto Ezwp3; vhJQ1: $conf[CURLOPT_PROGRESSFUNCTION] = function () use($progress) { $args = func_get_args(); if (!is_resource($args[0])) { goto xoSHx; } array_shift($args); xoSHx: call_user_func_array($progress, $args); }; goto kMGIj; I5PoC: $conf[CURLOPT_CAPATH] = $options["\x76\x65\x72\x69\146\171"]; goto MvKx9; NQL0H: $timeoutRequiresNoSignal |= $options["\164\x69\155\x65\157\x75\164"] < 1; goto hbQYY; YYuRN: PAavL: goto c9Ynf; iMGsu: goto vP1yl; goto SlM8G; dbFii: if ("\166\x34" === $options["\x66\x6f\x72\x63\145\137\151\x70\x5f\x72\145\x73\157\x6c\x76\x65"]) { goto PAavL; } goto EMFKY; XSZY1: if (file_exists($sslKey)) { goto Pysmh; } goto zsj2t; EMFKY: if (!("\x76\x36" === $options["\x66\x6f\162\x63\145\137\x69\x70\x5f\162\145\x73\x6f\154\166\145"])) { goto jaM82; } goto k6icY; qY3a7: if (!isset($options["\160\x72\x6f\147\162\145\x73\163"])) { goto WTvsY; } goto xGhB1; cR66V: HdCRM: goto x7Wdn; jyNRR: $accept = $easy->request->getHeaderLine("\101\143\143\145\x70\164\55\105\x6e\143\157\144\151\x6e\x67"); goto eIWPe; VjW6V: fIwai: goto A4G32; zK74f: if (!is_string($sink)) { goto zqqfT; } goto QE0Um; DgXlK: $conf[CURLOPT_WRITEFUNCTION] = function ($ch, $write) use($sink) { return $sink->write($write); }; goto iTRFh; YC0hu: if (empty($options["\x64\145\142\x75\147"])) { goto xRWRm; } goto uA8Hp; A2iwc: $sink = $options["\163\x69\156\153"]; goto zK74f; Tv7gh: if (file_exists($options["\166\145\x72\151\x66\x79"])) { goto bfErt; } goto Egtg_; h0UDx: if (!(!isset($options["\x70\162\x6f\x78\171"]["\x6e\157"]) || !\GuzzleHttp\is_host_in_noproxy($host, $options["\160\162\x6f\x78\171"]["\156\157"]))) { goto HdCRM; } goto rpC8f; pKh3o: $sink = new LazyOpenStream($sink, "\167\x2b"); goto ZcimD; FL1TF: goto tFfcM; goto YYuRN; yACA2: vJ4KS: goto Lq0ga; d_qF8: hEZXM: goto UQ2yR; Zy7gc: vP1yl: goto SFcBM; iXhpf: tFfcM: goto Rq48B; HHAZW: hgmFJ: goto qY3a7; i1oDX: goto KMQoA; goto yACA2; KQ_3e: if (!isset($options["\164\x69\155\145\x6f\165\164"])) { goto fIwai; } goto NQL0H; kMGIj: WTvsY: goto YC0hu; S1blD: d6WCZ: goto utqJr; EtEZT: if (!is_array($cert)) { goto d6WCZ; } goto IOUld; C6q4w: Pysmh: goto r5Aav; LIKaK: if (!isset($options["\x73\163\x6c\x5f\153\x65\x79"])) { goto hgmFJ; } goto Olb3m; ZnhE2: $conf[CURLOPT_SSLCERT] = $cert; goto aCdsI; NIEx4: C6YhO: goto PHmGD; Egtg_: throw new \InvalidArgumentException("\123\123\x4c\x20\x43\101\x20\142\x75\156\144\154\x65\40\x6e\157\x74\x20\x66\x6f\165\156\144\x3a\40{$options["\x76\145\x72\x69\146\x79"]}"); goto Y9aGY; Y9aGY: bfErt: goto QzePY; qPQ02: RXkEy: goto FTpRp; j1vBm: $conf[CURLOPT_VERBOSE] = true; goto SnT_v; HS2bh: throw new \RuntimeException(sprintf("\x44\x69\162\x65\x63\164\157\162\171\40\x25\163\40\144\157\145\163\x20\x6e\x6f\x74\40\x65\170\x69\x73\x74\40\x66\157\x72\40\x73\x69\156\x6b\x20\166\x61\154\x75\145\40\x6f\146\x20\45\x73", dirname($sink), $sink)); goto Zy7gc; uj250: $timeoutRequiresNoSignal |= $options["\x63\157\156\x6e\145\143\x74\137\164\151\155\145\157\x75\x74"] < 1; goto J74BG; Q9v82: $conf[CURLOPT_SSL_VERIFYHOST] = 2; goto IniVT; qugpW: $conf[CURLOPT_FILE] = fopen("\160\x68\160\72\57\57\164\x65\155\x70", "\167\x2b"); goto OB6bc; PHmGD: if (isset($options["\x73\151\x6e\153"])) { goto xhYNs; } goto qugpW; FTpRp: unset($conf[CURLOPT_CAINFO]); goto xIvAs; oB60l: if (!isset($options["\x70\x72\157\x78\171"][$scheme])) { goto i1Hpn; } goto ed7C9; k6icY: $conf[CURLOPT_IPRESOLVE] = CURL_IPRESOLVE_V6; goto ea3Pk; hbQYY: $conf[CURLOPT_TIMEOUT_MS] = $options["\164\x69\155\145\x6f\165\x74"] * 1000; goto VjW6V; nq1eH: $conf[CURLOPT_SSL_VERIFYPEER] = false; goto UEI8i; utqJr: if (file_exists($cert)) { goto HfYFl; } goto cv7hF; L7pKH: $conf[CURLOPT_CAINFO] = $options["\x76\x65\x72\x69\146\171"]; goto Yewdu; hUrOd: goto Fm5S0; goto qPQ02; SlM8G: C_0Ut: goto HS2bh; pE3Oh: throw new \InvalidArgumentException("\x70\162\157\147\162\x65\x73\163\40\x63\x6c\x69\145\156\x74\x20\157\x70\x74\151\x6f\156\40\x6d\x75\163\164\40\142\145\40\x63\141\x6c\154\141\142\x6c\145"); goto L3HNj; e4pQN: HfYFl: goto ZnhE2; ZcimD: goto vP1yl; goto EjomO; SnT_v: xRWRm: goto NUARv; EjomO: zqqfT: goto fH1Gr; sflFW: $conf[CURLOPT_NOPROGRESS] = false; goto vhJQ1; NUARv: } private static function retryFailedRewind(callable $handler, EasyHandle $easy, array $ctx) { goto rsCP_; X8DQ6: goto SuqSY; goto Lq8_b; sa4ml: return $handler($easy->request, $easy->options); goto t2tYG; Lq8_b: YbZsE: goto Kyneh; ywW44: SuqSY: goto sa4ml; rsCP_: try { goto SflTG; za3vP: $body->rewind(); goto xZ13y; SflTG: $body = $easy->request->getBody(); goto KkAxu; KkAxu: if (!($body->tell() > 0)) { goto FwsEv; } goto za3vP; xZ13y: FwsEv: goto p9c1J; p9c1J: } catch (\RuntimeException $e) { $ctx["\145\x72\x72\157\x72"] = "\124\x68\x65\40\143\x6f\156\156\x65\x63\x74\151\x6f\x6e\40\x75\x6e\145\x78\160\x65\143\164\x65\x64\x6c\171\40\x66\141\x69\154\x65\x64\40\x77\x69\x74\x68\157\x75\164\x20" . "\160\162\157\166\151\x64\151\x6e\147\x20\141\x6e\40\145\x72\x72\x6f\x72\x2e\40\124\x68\145\40\162\x65\x71\x75\145\163\x74\x20\x77\157\165\154\144\x20\x68\141\166\x65\40\x62\145\145\x6e\x20\x72\145\x74\162\151\x65\x64\54\x20" . "\142\165\x74\40\x61\164\x74\145\x6d\x70\164\151\156\147\x20\164\x6f\x20\x72\145\x77\x69\156\144\40\x74\x68\x65\40\x72\x65\161\x75\x65\163\x74\40\x62\x6f\x64\171\x20\x66\x61\151\154\x65\144\56\x20" . "\x45\x78\x63\145\x70\164\x69\x6f\x6e\x3a\40" . $e; return self::createRejection($easy, $ctx); } goto LLkFi; Kyneh: $ctx["\145\x72\162\157\x72"] = "\124\x68\145\40\143\x55\122\114\x20\162\145\161\x75\145\x73\x74\x20\x77\141\163\40\162\145\164\x72\x69\145\144\x20\63\x20\x74\x69\x6d\145\163\40" . "\141\x6e\144\40\144\151\x64\x20\x6e\x6f\x74\x20\163\x75\x63\143\x65\145\144\56\40\124\x68\x65\x20\155\x6f\x73\x74\x20\x6c\x69\153\145\154\171\40\162\x65\x61\163\x6f\156\x20\146\x6f\162\40\164\x68\145\x20\146\x61\151\x6c\165\x72\x65\40" . "\x69\163\40\164\150\x61\164\x20\143\125\122\114\x20\x77\141\163\x20\165\x6e\141\142\154\x65\40\x74\157\40\162\x65\167\x69\x6e\144\x20\x74\150\x65\40\x62\157\x64\x79\40\x6f\146\40\x74\150\x65\40\162\145\x71\165\x65\163\x74\x20" . "\x61\x6e\144\40\163\x75\x62\x73\x65\x71\165\145\x6e\x74\x20\x72\x65\x74\162\x69\x65\x73\x20\162\x65\x73\x75\154\164\145\x64\40\x69\156\x20\x74\x68\x65\x20\163\141\x6d\x65\x20\x65\162\162\157\162\56\40\124\165\162\x6e\40\x6f\x6e\x20" . "\x74\x68\145\40\144\145\x62\165\147\40\157\x70\x74\151\157\x6e\x20\164\157\x20\x73\145\145\40\167\150\x61\x74\x20\x77\x65\156\x74\x20\x77\x72\157\x6e\x67\x2e\40\123\x65\145\x20" . "\x68\164\164\160\x73\72\x2f\x2f\142\165\147\163\56\x70\150\160\56\156\x65\164\57\142\165\147\56\160\x68\160\77\151\x64\x3d\x34\67\x32\x30\64\x20\146\157\162\x20\155\157\162\x65\40\x69\x6e\x66\x6f\x72\x6d\x61\x74\x69\x6f\156\x2e"; goto XhXhG; L0BvL: goto SuqSY; goto JGRuZ; LLkFi: if (!isset($easy->options["\137\143\165\162\154\137\162\145\x74\162\x69\x65\x73"])) { goto jMqbB; } goto uy1tn; uy1tn: if ($easy->options["\137\143\x75\x72\154\x5f\162\x65\x74\x72\x69\145\x73"] == 2) { goto YbZsE; } goto drQtR; drQtR: $easy->options["\137\143\165\x72\154\137\162\145\164\x72\x69\x65\x73"]++; goto L0BvL; JGRuZ: jMqbB: goto zA2hM; zA2hM: $easy->options["\137\x63\x75\162\x6c\x5f\x72\x65\x74\x72\151\x65\163"] = 1; goto X8DQ6; XhXhG: return self::createRejection($easy, $ctx); goto ywW44; t2tYG: } private function createHeaderFn(EasyHandle $easy) { goto QJzg_; PJARG: return function ($ch, $h) use($onHeaders, $easy, &$startingResponse) { $value = trim($h); if ($value === '') { goto ePimP; } if ($startingResponse) { goto a7139; } $easy->headers[] = $value; goto betRq; ePimP: $startingResponse = true; $easy->createResponse(); if (!($onHeaders !== null)) { goto DLuQR; } try { $onHeaders($easy->response); } catch (\Exception $e) { $easy->onHeadersException = $e; return -1; } DLuQR: goto betRq; a7139: $startingResponse = false; $easy->headers = [$value]; betRq: return strlen($h); }; goto oV8Ha; k7fCR: FzGMC: goto DU4zx; rBbTl: if (is_callable($onHeaders)) { goto Emhig; } goto Bzd8g; KzDw5: Emhig: goto QI1Xd; m1vwR: goto hLw06; goto k7fCR; S03Ip: $onHeaders = null; goto m1vwR; QJzg_: if (isset($easy->options["\x6f\156\x5f\150\x65\141\x64\145\162\x73"])) { goto FzGMC; } goto S03Ip; QI1Xd: hLw06: goto PJARG; Bzd8g: throw new \InvalidArgumentException("\157\x6e\x5f\150\x65\141\144\x65\162\x73\40\155\x75\x73\164\x20\x62\x65\40\143\x61\x6c\x6c\141\142\154\145"); goto KzDw5; DU4zx: $onHeaders = $easy->options["\x6f\156\137\150\145\141\144\145\162\163"]; goto rBbTl; oV8Ha: } }