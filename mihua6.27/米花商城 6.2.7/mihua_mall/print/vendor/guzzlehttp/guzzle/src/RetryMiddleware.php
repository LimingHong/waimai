<?php
 namespace GuzzleHttp; use GuzzleHttp\Promise\PromiseInterface; use GuzzleHttp\Promise\RejectedPromise; use GuzzleHttp\Psr7; use Psr\Http\Message\RequestInterface; use Psr\Http\Message\ResponseInterface; class RetryMiddleware { private $nextHandler; private $decider; public function __construct(callable $decider, callable $nextHandler, callable $delay = null) { goto ssLSZ; ssLSZ: $this->decider = $decider; goto BGyt3; Zo9mj: $this->delay = $delay ?: __CLASS__ . "\72\72\x65\170\160\157\156\x65\x6e\x74\151\141\154\104\x65\154\x61\171"; goto Q9d2F; BGyt3: $this->nextHandler = $nextHandler; goto Zo9mj; Q9d2F: } public static function exponentialDelay($retries) { return (int) pow(2, $retries - 1); } public function __invoke(RequestInterface $request, array $options) { goto a0BIo; a0BIo: if (isset($options["\162\145\164\x72\151\145\x73"])) { goto k1cIf; } goto iwQXC; mP2y9: k1cIf: goto F7eMv; iwQXC: $options["\x72\145\164\x72\x69\145\x73"] = 0; goto mP2y9; F7eMv: $fn = $this->nextHandler; goto QGaMx; QGaMx: return $fn($request, $options)->then($this->onFulfilled($request, $options), $this->onRejected($request, $options)); goto GAQKq; GAQKq: } private function onFulfilled(RequestInterface $req, array $options) { return function ($value) use($req, $options) { if (call_user_func($this->decider, $options["\162\145\164\162\151\145\163"], $req, $value, null)) { goto Yy1Cs; } return $value; Yy1Cs: return $this->doRetry($req, $options, $value); }; } private function onRejected(RequestInterface $req, array $options) { return function ($reason) use($req, $options) { if (call_user_func($this->decider, $options["\162\x65\164\x72\x69\145\163"], $req, null, $reason)) { goto Gf7H_; } return \GuzzleHttp\Promise\rejection_for($reason); Gf7H_: return $this->doRetry($req, $options); }; } private function doRetry(RequestInterface $request, array $options, ResponseInterface $response = null) { $options["\x64\x65\x6c\141\x79"] = call_user_func($this->delay, ++$options["\x72\x65\x74\162\151\x65\x73"], $response); return $this($request, $options); } }