<?php
 namespace GuzzleHttp\Psr7; use InvalidArgumentException; use Psr\Http\Message\ServerRequestInterface; use Psr\Http\Message\UriInterface; use Psr\Http\Message\StreamInterface; use Psr\Http\Message\UploadedFileInterface; class ServerRequest extends Request implements ServerRequestInterface { private $attributes = array(); private $cookieParams = array(); private $parsedBody; private $queryParams = array(); private $serverParams; private $uploadedFiles = array(); public function __construct($method, $uri, array $headers = array(), $body = null, $version = "\x31\x2e\61", array $serverParams = array()) { $this->serverParams = $serverParams; parent::__construct($method, $uri, $headers, $body, $version); } public static function normalizeFiles(array $files) { goto Qf1qk; dWLor: foreach ($files as $key => $value) { goto ZWb3e; K3kpu: $normalized[$key] = self::createUploadedFileFromSpec($value); goto ul9e3; ZWb3e: if ($value instanceof UploadedFileInterface) { goto Oz1iJ; } goto EudCo; ul9e3: goto My83r; goto QZ_bd; vhbvL: Oz1iJ: goto eAKAD; TAKKa: throw new InvalidArgumentException("\x49\x6e\x76\141\154\x69\144\x20\166\x61\x6c\x75\x65\40\151\x6e\x20\x66\x69\154\x65\x73\40\163\x70\x65\x63\151\146\x69\143\141\164\151\157\x6e"); goto gFnoc; eAKAD: $normalized[$key] = $value; goto rIsCj; OBGRj: NYuxt: goto K3kpu; QZ_bd: k3Ahv: goto rG5Sx; rG5Sx: $normalized[$key] = self::normalizeFiles($value); goto tK3I1; jfEeP: if (is_array($value)) { goto k3Ahv; } goto TAKKa; V8OfQ: TgJ9c: goto Of5zH; XLPcC: My83r: goto V8OfQ; EudCo: if (is_array($value) && isset($value["\164\155\x70\137\x6e\141\155\x65"])) { goto NYuxt; } goto jfEeP; gFnoc: goto My83r; goto vhbvL; tK3I1: goto TgJ9c; goto XLPcC; rIsCj: goto My83r; goto OBGRj; Of5zH: } goto zYBTz; lV21d: return $normalized; goto YCJRU; Qf1qk: $normalized = []; goto dWLor; zYBTz: tm5Az: goto lV21d; YCJRU: } private static function createUploadedFileFromSpec(array $value) { goto NwO2h; BPpf7: hXsZT: goto vF8hU; vF8hU: return new UploadedFile($value["\164\155\x70\137\x6e\x61\155\145"], (int) $value["\x73\151\172\x65"], (int) $value["\x65\x72\162\x6f\162"], $value["\x6e\141\155\145"], $value["\x74\x79\x70\145"]); goto K0Iyj; NwO2h: if (!is_array($value["\164\x6d\160\137\x6e\x61\x6d\x65"])) { goto hXsZT; } goto j31dK; j31dK: return self::normalizeNestedFileSpec($value); goto BPpf7; K0Iyj: } private static function normalizeNestedFileSpec(array $files = array()) { goto o3OoA; wV4OC: iIHmm: goto FPLmh; o3OoA: $normalizedFiles = []; goto wt6CJ; FPLmh: return $normalizedFiles; goto FNMYp; wt6CJ: foreach (array_keys($files["\164\x6d\x70\x5f\156\141\155\145"]) as $key) { goto HnXMY; cTrlB: qFPC2: goto zKSPd; a4jsR: $normalizedFiles[$key] = self::createUploadedFileFromSpec($spec); goto cTrlB; HnXMY: $spec = ["\164\155\160\x5f\x6e\141\x6d\x65" => $files["\164\x6d\160\137\x6e\x61\x6d\x65"][$key], "\x73\151\172\145" => $files["\x73\x69\172\145"][$key], "\145\x72\x72\157\162" => $files["\145\162\x72\x6f\x72"][$key], "\x6e\x61\x6d\145" => $files["\156\141\155\145"][$key], "\164\x79\x70\145" => $files["\x74\171\160\145"][$key]]; goto a4jsR; zKSPd: } goto wV4OC; FNMYp: } public static function fromGlobals() { goto b3OwL; j2Jp8: $body = new LazyOpenStream("\x70\150\160\x3a\57\x2f\151\x6e\160\165\x74", "\x72\53"); goto tV11k; mJVck: return $serverRequest->withCookieParams($_COOKIE)->withQueryParams($_GET)->withParsedBody($_POST)->withUploadedFiles(self::normalizeFiles($_FILES)); goto ZqagH; b3OwL: $method = isset($_SERVER["\122\105\x51\125\105\123\124\x5f\115\x45\x54\110\x4f\104"]) ? $_SERVER["\122\105\x51\x55\x45\123\x54\x5f\115\105\124\110\117\x44"] : "\107\x45\x54"; goto oSeIB; tV11k: $protocol = isset($_SERVER["\x53\105\x52\x56\x45\122\x5f\120\x52\117\124\x4f\x43\x4f\x4c"]) ? str_replace("\x48\124\124\x50\57", '', $_SERVER["\x53\x45\x52\126\105\122\137\x50\x52\x4f\124\x4f\x43\x4f\x4c"]) : "\x31\56\x31"; goto NrpFJ; oSeIB: $headers = function_exists("\x67\145\x74\141\154\x6c\150\x65\141\144\x65\162\x73") ? getallheaders() : []; goto YJJf4; YJJf4: $uri = self::getUriFromGlobals(); goto j2Jp8; NrpFJ: $serverRequest = new ServerRequest($method, $uri, $headers, $body, $protocol, $_SERVER); goto mJVck; ZqagH: } public static function getUriFromGlobals() { goto nh_jG; FnjOX: if (!(!$hasPort && isset($_SERVER["\123\x45\x52\126\x45\x52\x5f\x50\117\x52\124"]))) { goto bBjxw; } goto pfYdx; UXari: tiiVd: goto IDbig; ZDjaM: bBjxw: goto AuS0V; QFQmx: $requestUriParts = explode("\x3f", $_SERVER["\x52\x45\121\125\105\123\x54\137\x55\122\111"]); goto f08gS; qISe3: goto QSXDF; goto YKTBk; W_Kiz: $hasPort = false; goto XXDdD; mGIOj: return $uri; goto xbPXz; aDjfB: $uri = $uri->withHost($_SERVER["\x53\105\x52\126\105\122\x5f\x41\104\x44\122"]); goto zmFxd; zvhFu: $uri = $uri->withPort($hostHeaderParts[1]); goto ZyG0m; dUzct: $hasQuery = true; goto taDRT; RouUX: if (!(!$hasQuery && isset($_SERVER["\x51\x55\105\x52\131\137\x53\124\x52\111\116\x47"]))) { goto H5BHe; } goto u6Hm_; EOxDO: $hostHeaderParts = explode("\72", $_SERVER["\x48\124\x54\x50\137\110\x4f\123\x54"]); goto JeeyG; pfYdx: $uri = $uri->withPort($_SERVER["\x53\105\122\x56\105\122\137\120\x4f\122\124"]); goto ZDjaM; nh_jG: $uri = new Uri(''); goto u8TFQ; T4T9q: if (!isset($_SERVER["\122\105\121\125\105\x53\x54\137\x55\122\x49"])) { goto cJoci; } goto QFQmx; zmFxd: QSXDF: goto FnjOX; gBPsb: A7uaI: goto EOxDO; u52Uj: oVTfB: goto MV7Pd; MV7Pd: $uri = $uri->withHost($_SERVER["\123\x45\x52\126\105\122\x5f\116\101\115\105"]); goto qISe3; jYknp: $hasPort = true; goto zvhFu; u8TFQ: $uri = $uri->withScheme(!empty($_SERVER["\x48\x54\x54\120\x53"]) && $_SERVER["\x48\124\x54\x50\x53"] !== "\157\x66\x66" ? "\x68\164\x74\x70\163" : "\150\x74\164\x70"); goto W_Kiz; ZyG0m: Re4ys: goto RIEic; yEqxn: H5BHe: goto mGIOj; df9sG: if (!isset($hostHeaderParts[1])) { goto Re4ys; } goto jYknp; XStQv: goto QSXDF; goto gBPsb; taDRT: $uri = $uri->withQuery($requestUriParts[1]); goto UXari; JeeyG: $uri = $uri->withHost($hostHeaderParts[0]); goto df9sG; AuS0V: $hasQuery = false; goto T4T9q; FS_y1: if (isset($_SERVER["\123\105\x52\126\x45\x52\137\101\104\104\122"])) { goto LwOEP; } goto XStQv; IDbig: cJoci: goto RouUX; XXDdD: if (isset($_SERVER["\x48\x54\x54\120\x5f\x48\117\123\x54"])) { goto A7uaI; } goto KNgkW; u6Hm_: $uri = $uri->withQuery($_SERVER["\x51\125\x45\x52\x59\x5f\123\124\x52\111\x4e\107"]); goto yEqxn; RIEic: goto QSXDF; goto u52Uj; f08gS: $uri = $uri->withPath($requestUriParts[0]); goto VSU8U; KNgkW: if (isset($_SERVER["\x53\x45\122\126\105\x52\137\116\101\x4d\x45"])) { goto oVTfB; } goto FS_y1; VSU8U: if (!isset($requestUriParts[1])) { goto tiiVd; } goto dUzct; YKTBk: LwOEP: goto aDjfB; xbPXz: } public function getServerParams() { return $this->serverParams; } public function getUploadedFiles() { return $this->uploadedFiles; } public function withUploadedFiles(array $uploadedFiles) { goto trwy5; Ieurw: $new->uploadedFiles = $uploadedFiles; goto URuoJ; URuoJ: return $new; goto YDUsw; trwy5: $new = clone $this; goto Ieurw; YDUsw: } public function getCookieParams() { return $this->cookieParams; } public function withCookieParams(array $cookies) { goto QwohC; jsxH1: return $new; goto V8t43; PKGa2: $new->cookieParams = $cookies; goto jsxH1; QwohC: $new = clone $this; goto PKGa2; V8t43: } public function getQueryParams() { return $this->queryParams; } public function withQueryParams(array $query) { goto d5ucZ; d5ucZ: $new = clone $this; goto x22Ya; RDibk: return $new; goto jJ7VZ; x22Ya: $new->queryParams = $query; goto RDibk; jJ7VZ: } public function getParsedBody() { return $this->parsedBody; } public function withParsedBody($data) { goto Pm8EY; Jv0ok: $new->parsedBody = $data; goto t6lrf; Pm8EY: $new = clone $this; goto Jv0ok; t6lrf: return $new; goto v1sQU; v1sQU: } public function getAttributes() { return $this->attributes; } public function getAttribute($attribute, $default = null) { goto G7u8u; V9MRV: return $default; goto yuUU9; yuUU9: xNDoi: goto G1b0U; G7u8u: if (!(false === array_key_exists($attribute, $this->attributes))) { goto xNDoi; } goto V9MRV; G1b0U: return $this->attributes[$attribute]; goto MZ6yF; MZ6yF: } public function withAttribute($attribute, $value) { goto ylZ9z; dqyOi: $new->attributes[$attribute] = $value; goto AvOPX; AvOPX: return $new; goto xEx4Z; ylZ9z: $new = clone $this; goto dqyOi; xEx4Z: } public function withoutAttribute($attribute) { goto Ei_13; XoEKW: $new = clone $this; goto f1tVp; U2EL5: return $new; goto RaPwb; C8Kcl: k9Rlx: goto XoEKW; f1tVp: unset($new->attributes[$attribute]); goto U2EL5; Ei_13: if (!(false === array_key_exists($attribute, $this->attributes))) { goto k9Rlx; } goto VQETX; VQETX: return $this; goto C8Kcl; RaPwb: } }