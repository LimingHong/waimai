<?php
 namespace GuzzleHttp; use Psr\Http\Message\RequestInterface; class HandlerStack { private $handler; private $stack = array(); private $cached; public static function create(callable $handler = null) { goto b00If; vsuH5: $stack->push(Middleware::httpErrors(), "\150\x74\x74\x70\137\x65\162\x72\157\x72\x73"); goto UfTO5; PM7aG: $stack->push(Middleware::cookies(), "\x63\x6f\x6f\x6b\x69\145\163"); goto NCjaF; NCjaF: $stack->push(Middleware::prepareBody(), "\x70\162\x65\x70\141\162\145\137\x62\x6f\x64\171"); goto lGGrt; UfTO5: $stack->push(Middleware::redirect(), "\x61\154\x6c\157\167\137\x72\145\144\x69\x72\x65\x63\164\x73"); goto PM7aG; lGGrt: return $stack; goto O_2oe; b00If: $stack = new self($handler ?: choose_handler()); goto vsuH5; O_2oe: } public function __construct(callable $handler = null) { $this->handler = $handler; } public function __invoke(RequestInterface $request, array $options) { $handler = $this->resolve(); return $handler($request, $options); } public function __toString() { goto rayZa; qxVYU: Hxle_: goto WY2CD; GhZoM: Sdc0v: goto RYd5f; n0IIm: $result = ''; goto GMpwN; rayZa: $depth = 0; goto eN_Wg; eN_Wg: $stack = []; goto o_ue2; WY2CD: foreach (array_keys($stack) as $k) { $result .= "\x3c\x20{$stack[$k]}\12"; jFXPn: } goto GhZoM; o_ue2: if (!$this->handler) { goto rPr80; } goto ZCXZt; ZCXZt: $stack[] = "\x30\51\40\110\141\156\144\x6c\145\162\72\40" . $this->debugCallable($this->handler); goto OU43y; RYd5f: return $result; goto ovTbd; OU43y: rPr80: goto n0IIm; GMpwN: foreach (array_reverse($this->stack) as $tuple) { goto kQGSv; Es_Ms: $str = "{$depth}\x29\x20\x4e\x61\155\145\72\x20\x27{$tuple[1]}\47\x2c\40"; goto j3NMd; Wh_Pe: $result = "\x3e\x20{$str}\12{$result}"; goto ksRGO; ksRGO: $stack[] = $str; goto bsmF5; bsmF5: C3xU6: goto oQwMb; j3NMd: $str .= "\x46\165\x6e\x63\x74\151\x6f\x6e\72\40" . $this->debugCallable($tuple[0]); goto Wh_Pe; kQGSv: $depth++; goto Es_Ms; oQwMb: } goto qxVYU; ovTbd: } public function setHandler(callable $handler) { $this->handler = $handler; $this->cached = null; } public function hasHandler() { return (bool) $this->handler; } public function unshift(callable $middleware, $name = null) { array_unshift($this->stack, [$middleware, $name]); $this->cached = null; } public function push(callable $middleware, $name = '') { $this->stack[] = [$middleware, $name]; $this->cached = null; } public function before($findName, callable $middleware, $withName = '') { $this->splice($findName, $withName, $middleware, true); } public function after($findName, callable $middleware, $withName = '') { $this->splice($findName, $withName, $middleware, false); } public function remove($remove) { goto qBBFY; qBBFY: $this->cached = null; goto RdCKG; hVOV6: $this->stack = array_values(array_filter($this->stack, function ($tuple) use($idx, $remove) { return $tuple[$idx] !== $remove; })); goto p1OkH; RdCKG: $idx = is_callable($remove) ? 0 : 1; goto hVOV6; p1OkH: } public function resolve() { goto zDcVH; ijZGT: return $this->cached; goto v9yVR; oOnNV: $this->cached = $prev; goto tFfG8; RiuF5: foreach (array_reverse($this->stack) as $fn) { $prev = $fn[0]($prev); XpIKy: } goto pynii; tFfG8: zkN2d: goto ijZGT; G6WdY: throw new \LogicException("\116\157\40\150\141\156\144\x6c\x65\x72\x20\150\x61\x73\40\x62\145\145\156\x20\163\x70\x65\x63\151\146\x69\x65\x64"); goto HIx9z; L5S3c: if ($prev = $this->handler) { goto bBgWm; } goto G6WdY; HIx9z: bBgWm: goto RiuF5; zDcVH: if ($this->cached) { goto zkN2d; } goto L5S3c; pynii: qW5k5: goto oOnNV; v9yVR: } private function findByName($name) { goto uOOBd; YS4xN: throw new \InvalidArgumentException("\x4d\x69\x64\x64\x6c\145\x77\x61\x72\x65\40\x6e\157\x74\x20\x66\157\165\x6e\x64\72\x20{$name}"); goto clJmg; dQd6a: E7pXf: goto YS4xN; uOOBd: foreach ($this->stack as $k => $v) { goto vq0UO; vq0UO: if (!($v[1] === $name)) { goto AlADi; } goto ih2zm; VBLBO: AlADi: goto yQsmz; ih2zm: return $k; goto VBLBO; yQsmz: PGUP_: goto MpThS; MpThS: } goto dQd6a; clJmg: } private function splice($findName, $withName, callable $middleware, $before) { goto oTw0D; MYA5A: c_7MC: goto XZ_aP; Yp54t: if ($before) { goto ihDEy; } goto zgI6Z; dNdM1: FIJOE: goto zDZrD; ygo3s: goto lobOY; goto dNdM1; CaUee: array_splice($this->stack, $idx, 1, $replacement); goto I0nAQ; SwPQw: YXeHs: goto jEeII; PcqfU: goto c_7MC; goto SwPQw; jsOcx: $tuple = [$middleware, $withName]; goto Yp54t; WAFd0: $replacement = [$this->stack[$idx], $tuple]; goto CaUee; cTKed: lobOY: goto PcqfU; n3VU7: $replacement = [$tuple, $this->stack[$idx]]; goto gNi7R; LP3nO: $idx = $this->findByName($findName); goto jsOcx; I0nAQ: goto c_7MC; goto UtfWE; oTw0D: $this->cached = null; goto LP3nO; zgI6Z: if ($idx === count($this->stack) - 1) { goto YXeHs; } goto WAFd0; gNi7R: array_splice($this->stack, $idx, 1, $replacement); goto ygo3s; jEeII: $this->stack[] = $tuple; goto MYA5A; zDZrD: array_unshift($this->stack, $tuple); goto cTKed; SzTt1: if ($idx === 0) { goto FIJOE; } goto n3VU7; UtfWE: ihDEy: goto SzTt1; XZ_aP: } private function debugCallable($fn) { goto ZJjIV; ZJjIV: if (!is_string($fn)) { goto MXeHi; } goto QoH_R; h19SJ: MXeHi: goto PUlJS; BLXxW: return is_string($fn[0]) ? "\143\141\x6c\154\141\x62\154\145\x28{$fn[0]}\72\x3a{$fn[1]}\x29" : "\x63\x61\154\154\141\142\x6c\x65\x28\x5b\x27" . get_class($fn[0]) . "\47\x2c\x20\x27{$fn[1]}\47\135\51"; goto ZDyB3; QoH_R: return "\143\x61\x6c\154\x61\142\x6c\x65\50{$fn}\x29"; goto h19SJ; onDsd: return "\x63\x61\154\154\141\142\x6c\x65\x28" . spl_object_hash($fn) . "\51"; goto dQiU7; ZDyB3: GqzF1: goto onDsd; PUlJS: if (!is_array($fn)) { goto GqzF1; } goto BLXxW; dQiU7: } }