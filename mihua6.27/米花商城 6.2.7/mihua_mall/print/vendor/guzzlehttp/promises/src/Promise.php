<?php
 namespace GuzzleHttp\Promise; class Promise implements PromiseInterface { private $state = self::PENDING; private $result; private $cancelFn; private $waitFn; private $waitList; private $handlers = array(); public function __construct(callable $waitFn = null, callable $cancelFn = null) { $this->waitFn = $waitFn; $this->cancelFn = $cancelFn; } public function then(callable $onFulfilled = null, callable $onRejected = null) { goto rEKQF; KKFw9: $rejection = rejection_for($this->result); goto hKVe9; iiyLQ: $p = new Promise(null, [$this, "\x63\x61\x6e\x63\145\x6c"]); goto r83JQ; i_xhA: neQkb: goto BJO1m; rEKQF: if (!($this->state === self::PENDING)) { goto neQkb; } goto iiyLQ; dNZpb: $p->waitList = $this->waitList; goto nEWAR; VOoPZ: return $p; goto i_xhA; r83JQ: $this->handlers[] = [$p, $onFulfilled, $onRejected]; goto dNZpb; lMFPB: u1Bdk: goto KKFw9; nEWAR: $p->waitList[] = $this; goto VOoPZ; BJO1m: if (!($this->state === self::FULFILLED)) { goto u1Bdk; } goto u3XEr; hKVe9: return $onRejected ? $rejection->then(null, $onRejected) : $rejection; goto UBY1b; u3XEr: return $onFulfilled ? promise_for($this->result)->then($onFulfilled) : promise_for($this->result); goto lMFPB; UBY1b: } public function otherwise(callable $onRejected) { return $this->then(null, $onRejected); } public function wait($unwrap = true) { goto PMURe; nKVXX: if ($this->result instanceof PromiseInterface || $this->state === self::FULFILLED) { goto dDM2F; } goto a7uzP; Y8KLe: return $inner; goto tOqz_; PMURe: $this->waitIfPending(); goto P7zIv; qbG6u: if (!$unwrap) { goto augyu; } goto nKVXX; a7uzP: throw exception_for($inner); goto IWkCc; NXIfm: augyu: goto urwkw; IWkCc: goto qCMxB; goto vVvcK; vVvcK: dDM2F: goto Y8KLe; tOqz_: qCMxB: goto NXIfm; P7zIv: $inner = $this->result instanceof PromiseInterface ? $this->result->wait($unwrap) : $this->result; goto qbG6u; urwkw: } public function getState() { return $this->state; } public function cancel() { goto MI5Qj; RDWVW: $this->reject(new CancellationException("\x50\x72\x6f\155\151\163\145\40\x68\x61\x73\x20\142\x65\145\x6e\x20\143\x61\x6e\143\145\154\x6c\145\144")); goto ixt3r; tIBwC: return; goto Rc5pX; u0ZfO: $this->waitFn = $this->waitList = null; goto zTpa5; ixt3r: aTUSd: goto RioI6; Rc5pX: cgWMX: goto u0ZfO; WG7hk: $this->cancelFn = null; goto wOB9o; wOB9o: try { $fn(); } catch (\Throwable $e) { $this->reject($e); } catch (\Exception $e) { $this->reject($e); } goto ThwRz; qKCSs: $fn = $this->cancelFn; goto WG7hk; zTpa5: if (!$this->cancelFn) { goto ZzyN7; } goto qKCSs; ThwRz: ZzyN7: goto hln5I; MI5Qj: if (!($this->state !== self::PENDING)) { goto cgWMX; } goto tIBwC; hln5I: if (!($this->state === self::PENDING)) { goto aTUSd; } goto RDWVW; RioI6: } public function resolve($value) { $this->settle(self::FULFILLED, $value); } public function reject($reason) { $this->settle(self::REJECTED, $reason); } private function settle($state, $value) { goto dLux2; XbGgp: if (!($state === $this->state && $value === $this->result)) { goto JzZYY; } goto dV4qS; SLNTQ: if (!($value === $this)) { goto AA2E6; } goto kZPd3; zrj0y: EObIR: goto AKwtS; dLux2: if (!($this->state !== self::PENDING)) { goto jbnNr; } goto XbGgp; eoh1j: $this->handlers = null; goto xQAGt; dmiGf: WGfCu: goto dtWBT; VDUpr: if (!method_exists($value, "\164\150\x65\x6e")) { goto nYCbA; } goto HCV7v; K06Bn: $id = $state === self::FULFILLED ? 1 : 2; goto oKOlz; kZPd3: throw new \LogicException("\x43\x61\156\156\x6f\164\40\146\x75\154\146\151\154\x6c\40\157\162\40\162\x65\152\x65\x63\x74\x20\141\x20\160\x72\157\x6d\x69\163\145\40\x77\151\x74\150\x20\x69\x74\x73\145\x6c\146"); goto V5c3u; xQAGt: $this->waitList = $this->waitFn = null; goto TpKIk; SaZVp: $handlers = $this->handlers; goto eoh1j; Tvgcz: if ($handlers) { goto URRX3; } goto sMbRl; AKwtS: $value->handlers = array_merge($value->handlers, $handlers); goto dmiGf; jTuP6: goto WGfCu; goto zrj0y; hHoqO: URRX3: goto VDUpr; gdreY: $this->state = $state; goto Pk7Lm; GvPCc: JzZYY: goto k4SrS; GFxu_: jbnNr: goto SLNTQ; vhmYd: nYCbA: goto K06Bn; mBLA0: $value->then(static function ($value) use($handlers) { foreach ($handlers as $handler) { self::callHandler(1, $value, $handler); UVXMt: } Tm9YQ: }, static function ($reason) use($handlers) { foreach ($handlers as $handler) { self::callHandler(2, $reason, $handler); D0wss: } Oj0yF: }); goto HBtVC; HBtVC: goto WGfCu; goto vhmYd; dV4qS: return; goto GvPCc; Pk7Lm: $this->result = $value; goto SaZVp; k4SrS: throw $this->state === $state ? new \LogicException("\124\150\x65\x20\x70\x72\x6f\155\151\163\145\40\x69\x73\40\x61\x6c\162\x65\141\x64\x79\x20{$state}\x2e") : new \LogicException("\x43\x61\156\156\x6f\164\40\143\x68\141\x6e\147\x65\40\141\x20{$this->state}\40\160\162\157\x6d\151\163\x65\x20\164\157\x20{$state}"); goto GFxu_; oKOlz: queue()->add(static function () use($id, $value, $handlers) { foreach ($handlers as $handler) { self::callHandler($id, $value, $handler); HqXae: } LAkjs: }); goto jTuP6; HCV7v: if ($value instanceof Promise && $value->getState() === self::PENDING) { goto EObIR; } goto mBLA0; sMbRl: return; goto hHoqO; V5c3u: AA2E6: goto gdreY; TpKIk: $this->cancelFn = null; goto Tvgcz; dtWBT: } private static function callHandler($index, $value, array $handler) { goto VqFC_; tyqP_: try { goto TUEjt; TUEjt: if (isset($handler[$index])) { goto X8ELM; } goto KeEyU; XKK15: FliYy: goto bxIax; u1lnv: $promise->resolve($handler[$index]($value)); goto zeoay; bDI1i: goto FliYy; goto pO36i; sXwf5: $promise->reject($value); goto bDI1i; x2GLO: WUfm9: goto uMVII; pO36i: X8ELM: goto u1lnv; uMVII: $promise->resolve($value); goto XKK15; zeoay: goto FliYy; goto x2GLO; KeEyU: if ($index === 1) { goto WUfm9; } goto sXwf5; bxIax: } catch (\Throwable $reason) { $promise->reject($reason); } catch (\Exception $reason) { $promise->reject($reason); } goto L0gaz; Wy3NA: if (!($promise->getState() !== self::PENDING)) { goto YKW1s; } goto FKzdT; TTovc: YKW1s: goto tyqP_; FKzdT: return; goto TTovc; VqFC_: $promise = $handler[0]; goto Wy3NA; L0gaz: } private function waitIfPending() { goto UqIVu; X9dZa: goto hbnwN; goto i8GpK; OojNN: if ($this->waitList) { goto gLQKU; } goto m8cN3; imLMY: $this->invokeWaitList(); goto aTGss; m8cN3: $this->reject("\x43\x61\156\156\157\x74\40\167\141\x69\164\40\157\x6e\40\141\x20\160\162\x6f\x6d\151\163\145\x20\x74\x68\x61\164\40\x68\141\163\x20" . "\x6e\157\x20\151\156\164\x65\162\x6e\x61\154\40\x77\x61\x69\164\40\146\165\x6e\x63\x74\x69\157\156\56\40\x59\x6f\165\x20\155\165\163\x74\40\x70\x72\157\x76\x69\x64\145\40\x61\40\x77\x61\x69\x74\x20" . "\146\165\x6e\143\164\x69\157\156\x20\167\x68\145\156\40\x63\157\156\163\x74\x72\165\x63\x74\151\x6e\x67\x20\164\150\x65\40\160\x72\x6f\x6d\x69\163\x65\40\x74\157\x20\x62\x65\40\x61\x62\x6c\145\x20\164\157\x20" . "\x77\x61\x69\164\40\x6f\156\40\x61\x20\x70\162\157\x6d\151\163\x65\x2e"); goto X9dZa; pKWqX: if (!($this->state === self::PENDING)) { goto J7wF7; } goto T3VYw; i8GpK: cWudG: goto L13o0; L13o0: return; goto hrMX0; ShGUa: if ($this->waitFn) { goto rCdDj; } goto OojNN; hrMX0: goto hbnwN; goto q30XF; q30XF: rCdDj: goto ctEUY; l5mUF: J7wF7: goto L8uvE; ctEUY: $this->invokeWaitFn(); goto igFGl; UqIVu: if ($this->state !== self::PENDING) { goto cWudG; } goto ShGUa; xxNQL: queue()->run(); goto pKWqX; igFGl: goto hbnwN; goto Mu8zP; T3VYw: $this->reject("\111\x6e\x76\157\x6b\151\156\147\x20\164\150\x65\x20\167\x61\151\x74\40\x63\x61\x6c\x6c\x62\x61\x63\x6b\x20\144\151\144\x20\156\157\x74\x20\x72\145\x73\157\x6c\x76\145\x20\x74\x68\145\40\160\x72\x6f\x6d\151\163\x65"); goto l5mUF; Mu8zP: gLQKU: goto imLMY; aTGss: hbnwN: goto xxNQL; L8uvE: } private function invokeWaitFn() { try { goto KMgYd; GSthd: $wfn(true); goto BdimL; KMgYd: $wfn = $this->waitFn; goto mYXF3; mYXF3: $this->waitFn = null; goto GSthd; BdimL: } catch (\Exception $reason) { goto QmdsZ; im1CI: goto FALSZ; goto BkdZQ; D6wNA: $this->reject($reason); goto bVQEE; QmdsZ: if ($this->state === self::PENDING) { goto z54eo; } goto xQNDB; bVQEE: FALSZ: goto jFCqe; xQNDB: throw $reason; goto im1CI; BkdZQ: z54eo: goto D6wNA; jFCqe: } } private function invokeWaitList() { goto Dqehd; se7EA: foreach ($waitList as $result) { goto mvByI; Yyz9N: goto D314E; goto tbBKs; dGYKo: Q7Qpk: goto OIB1s; tbBKs: rrlYH: goto mbN3c; px50Y: if (!true) { goto Q7Qpk; } goto P1c7n; qb2lx: if (!$result->result instanceof PromiseInterface) { goto ycMLk; } goto Y3eA3; zzbRt: if ($result->result instanceof Promise) { goto rrlYH; } goto qb2lx; xnsMv: ycMLk: goto iamoW; mvByI: XcPhm: goto px50Y; mbN3c: $result = $result->result; goto Yo0RZ; iamoW: goto Q7Qpk; goto Yyz9N; SbPrX: goto XcPhm; goto dGYKo; Yo0RZ: D314E: goto SbPrX; Y3eA3: $result->result->wait(false); goto xnsMv; OIB1s: AFu_T: goto rJes1; P1c7n: $result->waitIfPending(); goto zzbRt; rJes1: } goto D63Gh; D63Gh: NNkhH: goto eDQVt; Dqehd: $waitList = $this->waitList; goto lfLbR; lfLbR: $this->waitList = null; goto se7EA; eDQVt: } }