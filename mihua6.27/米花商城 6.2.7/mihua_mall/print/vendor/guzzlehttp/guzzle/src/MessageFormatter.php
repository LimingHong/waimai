<?php
 namespace GuzzleHttp; use Psr\Http\Message\MessageInterface; use Psr\Http\Message\RequestInterface; use Psr\Http\Message\ResponseInterface; class MessageFormatter { const CLF = "\173\x68\x6f\x73\164\x6e\x61\x6d\x65\x7d\x20\x7b\x72\x65\x71\137\x68\145\x61\x64\x65\x72\137\125\x73\x65\x72\55\101\x67\145\156\164\175\40\55\x20\133\x7b\144\141\x74\145\x5f\x63\157\x6d\x6d\x6f\156\x5f\154\x6f\x67\x7d\x5d\40\42\173\155\x65\164\x68\157\x64\x7d\40\173\x74\x61\162\147\145\164\175\40\x48\x54\124\x50\x2f\173\166\x65\162\163\x69\x6f\156\x7d\x22\40\173\143\157\x64\145\x7d\x20\x7b\x72\145\163\137\x68\145\141\x64\x65\x72\137\103\157\x6e\164\145\156\x74\x2d\114\x65\x6e\147\x74\x68\175"; const DEBUG = "\76\x3e\x3e\76\76\76\76\x3e\12\173\x72\x65\161\x75\145\x73\164\175\12\74\x3c\x3c\74\x3c\x3c\74\x3c\xa\173\x72\x65\163\x70\157\x6e\x73\x65\175\12\55\55\55\x2d\55\x2d\55\55\12\173\145\162\x72\157\162\175"; const SHORT = "\x5b\173\x74\163\x7d\x5d\x20\x22\x7b\155\x65\164\x68\157\144\x7d\x20\173\x74\141\x72\x67\145\164\175\40\110\124\124\120\57\173\166\x65\x72\x73\151\157\156\x7d\42\x20\173\x63\x6f\144\145\175"; private $template; public function __construct($template = self::CLF) { $this->template = $template ?: self::CLF; } public function format(RequestInterface $request, ResponseInterface $response = null, \Exception $error = null) { $cache = []; return preg_replace_callback("\57\x7b\134\x73\x2a\x28\133\101\x2d\132\141\x2d\172\x5f\134\55\134\56\60\x2d\x39\135\53\51\x5c\163\x2a\x7d\x2f", function (array $matches) use($request, $response, $error, &$cache) { if (!isset($cache[$matches[1]])) { goto nVRDa; } return $cache[$matches[1]]; nVRDa: $result = ''; switch ($matches[1]) { case "\162\x65\x71\x75\x65\163\164": $result = Psr7\str($request); goto dt7X_; case "\x72\145\x73\160\157\x6e\x73\145": $result = $response ? Psr7\str($response) : ''; goto dt7X_; case "\x72\145\x71\137\150\145\x61\x64\145\162\163": $result = trim($request->getMethod() . "\40" . $request->getRequestTarget()) . "\40\x48\124\124\x50\x2f" . $request->getProtocolVersion() . "\15\xa" . $this->headers($request); goto dt7X_; case "\x72\145\x73\x5f\x68\x65\x61\144\x65\162\163": $result = $response ? sprintf("\110\124\124\120\x2f\45\x73\40\x25\x64\40\x25\x73", $response->getProtocolVersion(), $response->getStatusCode(), $response->getReasonPhrase()) . "\15\xa" . $this->headers($response) : "\x4e\x55\x4c\114"; goto dt7X_; case "\x72\x65\161\x5f\142\x6f\x64\x79": $result = $request->getBody(); goto dt7X_; case "\162\x65\163\137\142\x6f\x64\171": $result = $response ? $response->getBody() : "\116\125\x4c\114"; goto dt7X_; case "\164\x73": case "\x64\141\164\145\137\x69\163\x6f\x5f\70\x36\x30\x31": $result = gmdate("\143"); goto dt7X_; case "\x64\141\164\145\137\143\157\155\x6d\x6f\x6e\137\154\157\147": $result = date("\144\57\115\57\x59\x3a\x48\x3a\151\x3a\x73\x20\x4f"); goto dt7X_; case "\155\x65\x74\x68\x6f\144": $result = $request->getMethod(); goto dt7X_; case "\166\x65\x72\x73\x69\x6f\x6e": $result = $request->getProtocolVersion(); goto dt7X_; case "\x75\162\151": case "\165\x72\154": $result = $request->getUri(); goto dt7X_; case "\164\141\162\147\145\164": $result = $request->getRequestTarget(); goto dt7X_; case "\x72\x65\161\137\x76\145\162\x73\x69\157\156": $result = $request->getProtocolVersion(); goto dt7X_; case "\x72\x65\163\137\x76\145\162\x73\x69\157\x6e": $result = $response ? $response->getProtocolVersion() : "\x4e\x55\x4c\114"; goto dt7X_; case "\x68\x6f\163\164": $result = $request->getHeaderLine("\110\x6f\x73\x74"); goto dt7X_; case "\x68\x6f\x73\164\156\x61\x6d\145": $result = gethostname(); goto dt7X_; case "\143\x6f\x64\145": $result = $response ? $response->getStatusCode() : "\x4e\125\114\x4c"; goto dt7X_; case "\x70\x68\x72\x61\163\145": $result = $response ? $response->getReasonPhrase() : "\116\125\114\x4c"; goto dt7X_; case "\145\x72\x72\157\x72": $result = $error ? $error->getMessage() : "\116\125\114\114"; goto dt7X_; default: goto k3clS; PrRLu: D4k5h: goto Pkg9j; GlhVy: goto RxS_O; goto ypcA8; H3LJg: if (strpos($matches[1], "\x72\145\163\137\x68\x65\141\x64\145\x72\x5f") === 0) { goto D4k5h; } goto GlhVy; gYAXI: goto RxS_O; goto PrRLu; IDLxl: $result = $request->getHeaderLine(substr($matches[1], 11)); goto gYAXI; J7oLo: RxS_O: goto LZXWD; Pkg9j: $result = $response ? $response->getHeaderLine(substr($matches[1], 11)) : "\116\125\114\114"; goto J7oLo; ypcA8: WyxNk: goto IDLxl; k3clS: if (strpos($matches[1], "\162\145\161\x5f\150\145\141\144\145\162\137") === 0) { goto WyxNk; } goto H3LJg; LZXWD: } z0cOB: dt7X_: $cache[$matches[1]] = $result; return $result; }, $this->template); } private function headers(MessageInterface $message) { goto NE1zB; NE1zB: $result = ''; goto vZiqy; Zl677: return trim($result); goto z9I9O; vZiqy: foreach ($message->getHeaders() as $name => $values) { $result .= $name . "\72\x20" . implode("\54\x20", $values) . "\15\xa"; vCxgN: } goto crQvp; crQvp: abeJI: goto Zl677; z9I9O: } }